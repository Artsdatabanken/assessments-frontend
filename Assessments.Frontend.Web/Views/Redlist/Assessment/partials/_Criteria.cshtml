
@model SpeciesAssessment2021
@*


*@

@{

    Dictionary<string, Dictionary<string, object>> criteria = ViewBag.kriterier.ToObject<Dictionary<string, Dictionary<string, object>>>();
    var criteria_json = ViewBag.kriterier;

    string a = "";
    string b = "";
    string c = "";
    string d = "";
    string e = "";



    void placeCriteria(string criteria)
    {

        if (criteria.Contains("A"))
        {
            a = criteria;
        }
        else if (criteria.Contains("B"))
        {
            b = criteria;
        }
        else if (criteria.Contains("C"))
        {
            c = criteria;
        }
        else if (criteria.Contains("D"))
        {
            d = criteria;
        }
        else if (criteria.Contains("E"))
        {
            e = criteria;
        }

    }


    if (@Model.CriteriaSummarized.Contains(";"))
    {
        // SPLIT THE LIST AND LOOP THEM
        foreach (string crit in @Model.CriteriaSummarized.Split(";"))
        {
            placeCriteria(crit);
        }
    }
    else
    {
        placeCriteria(@Model.CriteriaSummarized);
    }


    string subCriteria(string element, string bigstring)
    {
        return bigstring.Replace("+", ";" + element);
    }




    // A CRITERIA:
    // OPTIONS AND SUBCRITERIA ARE SEPARATE ENTITIES

    string a_subcriteria = "";
    string a_options = "";

    a = subCriteria("A", a);
    a = a.Replace("(", ";(");
    var distinctlist = a.Split(";").Distinct();
    a = string.Join(";", distinctlist);

    // STUPID WAY TO DO IT BUT ITS LATE IN THE DAY.

    if (a.Contains("("))
    {
        a_subcriteria = a.Split(";(")[0];
        a_options = a.Split(";(")[1];
        a_subcriteria += a_options.Split(")")[1];
        a_options = a_options.Split(")")[0];
        a = a_subcriteria + ";" + a_options;

    }


    // B CRITERIA

    // OPTIONS AND SUBCRITERIA ARE SEPARATE ENTITIES

    string b_subcriteria = "";
    string b_options = "";

    b = subCriteria("B", b);
    if (b.Contains("B1"))
    {
        b_subcriteria += "B1;";
        b = b.Replace("B1", "");
    }
    if (b.Contains("B2"))
    {
        b_subcriteria += "B2";
        b = b.Replace("B2", "");
    }

    b = b.Replace("b", ";b");
    b = b.Replace("c", ";c");
    var b_distinctlist = b.Split(";").Distinct();
    b_options = string.Join(";", b_distinctlist);
    b = b_subcriteria + ";" + b_options;



    // C CRITERIA:
    c = subCriteria("C", c);



    // D CRITERIA:
    // NO OPTIONS ONLY SUBCRITERIA

    d = subCriteria("D", d);


    // E CRITERIA:
    // Actually never in use, so no need to worry bout this one


    var subcriteria = new Dictionary<string, string>(){
    {"A", a_subcriteria},
    {"B", b_subcriteria},
    {"C", c},
    {"D", d},
    {"E", e},
    };


    var options = new Dictionary<string, string>(){
    {"A", a_options},
    {"B", b_options},
    };



    string inString(string element, string bigstring)
    {
        if (bigstring.Contains(element))
        {
            return "active";
        }
        return "inactive";
    }

    string inList(string element, string[] bigstring)
    {

        @foreach (string el in bigstring)
        {
            if (bigstring.Contains(element))
            {
                return "active";
            }
        }


        return "inactive";
    }

    void iconChooser(string compare)
    {
        @if (@compare == "active")
        {
            <span class="material-icons">
                done
            </span>
        }
        else if (@compare == "maybe")
        {
            <span class="material-icons">
                pause
            </span>
        }
        else
        {
            <span class="material-icons">
                close
            </span>
        }
    }


}


@if (!string.IsNullOrEmpty(Model.CriteriaSummarized))
{
    <div class="page_section criteria">

        <h2>Hvilke kriterier gjør at denne arten er rødlistet?</h2>
        <p> En fin plass å oppsummere bittelitt om kriteriene, og si en slags introsetning. </p>
        <div class="page_section">
            <p>@Model.CriteriaSummarized<br /></p>

            A: @a <br />
            B: @b<br />
            C: @c <br />
            D: @d <br />
            E: @e <br />
        </div>

        <!-- MAIN CRITERIA -->
        @foreach (var (key, value) in criteria)
        {
            <div class="criteria_element @inString(key, @Model.CriteriaSummarized) listitem_criteria">
                <h3>
                    @{ iconChooser(@inString(key, @Model.CriteriaSummarized)); }
                </h3>

                <div class="listitem_text_field">
                    <h3>@key -  @value["title"]</h3>

                    <p class="criteria_description">
                        @value["description"]
                    </p>



                    <!-- SUB CRITERIA : obtain and reformat necessary data -->
                    @if (@value.ContainsKey("subcriteria"))
                    {
                        <div class="criteria_subcriteria">
                            @{
                                var newDictionary2 = Newtonsoft.Json.Linq.JObject.Parse(value["subcriteria"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                            }
                            @foreach (var (k, v) in newDictionary2)
                            {
                                <!-- ITERATE THROUGH ALL SUBCRITERIA -->
                                <div class=" @inString(k, subcriteria[key]) listitem_criteria">

                                    @{ iconChooser(@inString(k, subcriteria[key])); }

                                    <div class="listitem_text_field">

                                        <h5>@k <span>@v["title"]</span></h5><br />

                                        @if (v.ContainsKey("description"))
                                        {
                                            <p>@v["description"]</p>

                                        }

                                        <!-- SUBCRITERIA SUBOPTIONS FOR C-CRITERIA -->
                                        @{
                                            // THIS IS ONLY RELEVANT FOR C2
                                            var splitlist = subcriteria[key].Split(";");
                                            var current_element = "";
                                            foreach (string element in splitlist)
                                            {
                                                // k = current criteria
                                                if (element.Contains(k))
                                                {
                                                    current_element = element;
                                                }
                                            }
                                            current_element = current_element.Replace(k, "");
                                            // Don't look at it. It works :|
                                            current_element = current_element.Replace("a(i,ii)", "a(i)a(ii)");
                                            current_element = current_element.Replace(")", ");");
                                            current_element = current_element.Replace(" ", "");
                                            var currentlist = current_element.Split(";");
                                        }

                                        <!--- ITERATE SUBOPTIONS FOR Ca2 -->
                                        @if (v.ContainsKey("subsub"))
                                        {
                                            <div class="subsub_list">
                                                @{
                                                    var subdict = Newtonsoft.Json.Linq.JObject.Parse(@v["subsub"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                                                }

                                                @foreach (var (subkey, subval) in subdict)
                                                {
                                                    <div class="@inList(subkey, currentlist) listitem_criteria">
                                                        @{ iconChooser(@inList(subkey, currentlist)); }
                                                        <div class="listitem_text_field">
                                                            <b>@subkey</b>
                                                            <span>@subval["title"]</span>
                                                        </div>
                                                    </div>
                                                }

                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    }

                    <!-- OPTIONS-->
                    @if (@value.ContainsKey("options"))
                    {
                        <div class="criteria_options">
                            @{
                                var newDictionary = Newtonsoft.Json.Linq.JObject.Parse(value["options"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                            }
                            <h4> Underkriterier </h4><br />

                            @foreach (var (k, v) in newDictionary)
                            {

                                <div class="listitem_criteria @inString(k, options[key])">
                                    @{ iconChooser(@inString(k, options[key])); }
                                    <div class="listitem_text_field">
                                        <h5>@k. <span>@v["title"]</span></h5>
                                        @if (v.ContainsKey("description"))
                                        {
                                            <p>@v["description"] </p>

                                        }
                                        @if (v.ContainsKey("sub"))
                                        {

                                    <div class="subsub_list">
                                        @{
                                            var currentlist = options[key].Split(";");
                                            var current_element = "";
                                            foreach (string element in currentlist)
                                            {
                                                // k = current criteria
                                                if (element.Contains(k))
                                                {
                                                    current_element = element;
                                                }
                                            }
                                            current_element = current_element.Replace(k, "");
                                            if (current_element.Length > 2)
                                            {
                                                if (current_element.StartsWith("(") && current_element.EndsWith(")"))
                                                {
                                                    current_element = current_element.Substring(1, current_element.Length - 2);
                                                }
                                            }
                                            var clean_list = current_element.Split(",");

                                            var subsub = Newtonsoft.Json.Linq.JObject.Parse(@v["sub"].ToString());
                                            var subdict = subsub.ToObject<Dictionary<string, Dictionary<string, object>>>();
                                        }
                        

                                        @foreach (var (subkey, subvalue) in subdict)
                                        {
                                            <div class="listitem_criteria @inList(subkey, clean_list)">
                                                @{ iconChooser(@inList(subkey, clean_list)); }
                                                <div class="listitem_text_field">
                                                    <span>@subkey </span>
                                                    <span>@subvalue["title"]</span>
                                                </div>
                                            </div>

                                        }
                                        <br />

                                    </div>

                                        }


                                    </div>
                                </div>


                            }
                        </div>
                    }<!-- END OPTIONS-->
                </div>
            </div>


        }


    </div>
}
