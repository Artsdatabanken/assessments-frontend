@model AlienSpeciesDetailViewModel
@using Assessments.Mapping.AlienSpecies.Model.Enums
@*
   Risk Matrix

   FILLED LINE: BEST ESTIMATE OF MARTIX PLACEMENT
   -> Determines risk category

   Dashed/Dotted Line - Uncertainty
   -> one step up/down from risk category
       x-axis: A-C-criteria. Rules will come later.
       y-axis: the/those criteria D-I with the highest value       
           if UncertaintyValues.Count > 1 = has uncertainty on the y-axis
                upwards uncertainty: the highest number
                downwards uncertainty: all determening criteria must have the same for it to be added
           if UncertaintyValues.Count == 1 = no uncertainty on the y-axis
*@

@{
    // Names / Descriptions         
    string xAxisLabel = "Invasjonspotensial";
    string yAxisLabel = "Økologisk effekt";

    // Obtain Criteria Letters
    var criteria = Model.Assessment.Criteria;
    var A = AlienSpeciesAssessment2023CriteriaLetter.A;
    var B = AlienSpeciesAssessment2023CriteriaLetter.B;
    var C = AlienSpeciesAssessment2023CriteriaLetter.C;

    // Risk category placement
    int x = Model.Assessment.ScoreInvasionPotential.Value;
    int y = Model.Assessment.ScoreEcologicalEffect.Value;
    List<AlienSpeciesAssessment2023Criterion> yAxisCriteriaList = new List<AlienSpeciesAssessment2023Criterion>();


    // Obtain all counting criteria
    foreach (var criterion in criteria)
    {
        var letter = criterion.CriteriaLetter;
        var xAxis = (letter == A || letter == B || letter == C);
        if (!xAxis){
            if (criterion.UncertaintyValues.Count > 1 && criterion.Value > 0 && criterion.Value == y)
            {
                yAxisCriteriaList.Add(criterion);
            }
        }
    }

    // Uncertainty Values

    int yhigherUncertainty = y;
    List<int> lowestYList = new List<int>();

    foreach (var criterion in yAxisCriteriaList)
    {
        // Obtain top and bottom uncertainties
        int criteriaLowestY = y;
        foreach (var uncertainty in criterion.UncertaintyValues)
        {
            // Always use highest uncertainty 
            if(uncertainty > yhigherUncertainty)
            {
                yhigherUncertainty = uncertainty;
            }
            // dump all the lower uncertainties into one comparison-list
            if(uncertainty < y)
            {
                lowestYList.Add(uncertainty);
            }
        }   
    }

    int yLowerUncertainty = y;
    // set lower uncertainty if all lower uncertainty values are the same
    if(lowestYList.Distinct().Count() == 1)
    {
        yLowerUncertainty = lowestYList[0];
    }

}

@functions{
    string className(int current_x, int current_y, int place_x, int place_y,int highestUncertainty_y, int lowestUncertainty_y){

        string name = "" + current_x + current_y;
        string place = "" + place_x + place_y;
        string classN = "inactive";

        if(current_x == place_x)
        {
            // Add UPWARDS uncertainty to the y-axis only for the current column on the x-axis.
            if (current_y <= highestUncertainty_y && current_y > place_y)
            {
                // y value smaller than the highest cap
                // higher than the category value
                classN = "uncertain " + highestUncertainty_y + " " +current_y + " " + place_y;               
            }

            // Add DOWNWARDS uncertainty to the y-axis only for the current column on the x-axis.
            if (current_y >= lowestUncertainty_y && current_y < place_y)
            {
                // y value higher than the lowest cap
                // lower than the category value
                classN = "uncertain " + lowestUncertainty_y + " " +current_y + " " + place_y;               
            }
        }

        if(name == place)
        {
            classN = "active";            
        }
        return classN;
    }
}
<h2>@Constants.HeadingsNO["RiskMatrix"]</h2>

<figure class="risk-level-matrix">
    <table>
        <tbody>
            
            <tr>
                <td rowspan="4" class="legend legend-v"><span>@yAxisLabel</span></td>
                <td class="description"><span>4</span> stor</td>
                <td class="cat-ph @className(1, 4, x, y, yhigherUncertainty, yLowerUncertainty )" id="risk-41">14</td>
                <td class="cat-hi @className(2, 4, x, y, yhigherUncertainty, yLowerUncertainty )"  id="risk-42">24</td>
                <td class="cat-se @className(3, 4, x, y, yhigherUncertainty, yLowerUncertainty )"  id="risk-43">34</td>
                <td class="cat-se @className(4, 4, x, y, yhigherUncertainty, yLowerUncertainty )"  id="risk-44">44</td>
            </tr>
            <tr>
                <td class="description"><span>3</span> middels</td>
                <td class="cat-lo @className(1, 3, x, y, yhigherUncertainty, yLowerUncertainty )" id="risk-31">13</td>
                <td class="cat-hi @className(2, 3, x, y, yhigherUncertainty, yLowerUncertainty )" id="risk-32">23</td>
                <td class="cat-hi @className(3, 3, x, y, yhigherUncertainty, yLowerUncertainty )" id="risk-33">33</td>
                <td class="cat-se @className(4, 3, x, y, yhigherUncertainty, yLowerUncertainty )" id="risk-34">43</td>
            </tr>
            <tr>
                <td class="description"><span>2</span> liten</td>
                <td class="cat-lo @className(1, 2, x, y, yhigherUncertainty, yLowerUncertainty )" id="risk-21">12</td>
                <td class="cat-lo @className(2, 2, x, y, yhigherUncertainty, yLowerUncertainty )" id="risk-22">22</td>
                <td class="cat-lo @className(3, 2, x, y, yhigherUncertainty, yLowerUncertainty )" id="risk-23">32</td>
                <td class="cat-hi @className(4, 2, x, y, yhigherUncertainty, yLowerUncertainty )" id="risk-24">42</td>
            </tr>
            <tr>
                <td class="description"><span>1</span> ingen kjent</td>
                <td class="cat-nk @className(1, 1, x, y, yhigherUncertainty, yLowerUncertainty )" id="risk-11">11</td>
                <td class="cat-lo @className(2, 1, x, y, yhigherUncertainty, yLowerUncertainty )" id="risk-12">21</td>
                <td class="cat-lo @className(3, 1, x, y, yhigherUncertainty, yLowerUncertainty )" id="risk-13">31</td>
                <td class="cat-ph @className(4, 1, x, y, yhigherUncertainty, yLowerUncertainty )" id="risk-14">41</td>
            </tr>
            <tr>
                <td class="description"></td>
                <td class="description"></td>
                <td class="description"><span>1</span> lite</td>
                <td class="description"><span>2</span> begrensa</td>
                <td class="description"><span>3</span> moderat</td>
                <td class="description"><span>4</span> stor</td>
            </tr>
        <tr>
            <td class="legend"></td>
            <td></td>
            <td colspan="4" class="legend">@xAxisLabel</td>
        </tr>
        </tbody>
    </table>
   <!--  <a class="info-link" href="/pages/239659" target="_blank">Forklaring på risikomatrisen</a>-->
</figure>