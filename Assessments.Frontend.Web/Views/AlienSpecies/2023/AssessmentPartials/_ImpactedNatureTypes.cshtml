@model AlienSpeciesDetailViewModel;
@using Assessments.Mapping.AlienSpecies.Model.Enums;

@{
    var assessment = Model.Assessment;
    var natureTypes = assessment.ImpactedNatureTypes;
    var isSvalbard = assessment.EvaluationContext == AlienSpeciesAssessment2023EvaluationContext.S;
    var showMicroHabitats = assessment.MicroHabitat != null && assessment.MicroHabitat.Count() != 0;
    var showNatureTypes = natureTypes != null && natureTypes.Count > 0;
    var hasCoastLineSections = assessment.CoastLineSections != null;
    var hasCurrentBioClimateZones = assessment.CurrentBioClimateZones != null;
    var hasArcticBioClimateZones = assessment.ArcticBioClimateZones != null;
    var showRegionalNatureVariationList = hasCoastLineSections || hasArcticBioClimateZones || hasCurrentBioClimateZones;

    var hasCurrentTimeHorizonTypes = natureTypes.FirstOrDefault(x => x.TimeHorizon == AlienSpeciesAssessment2023TimeHorizon.now) != null;
    var hasFutureTimeHorizonTypes = natureTypes.FirstOrDefault(x => x.TimeHorizon == AlienSpeciesAssessment2023TimeHorizon.future) != null;

    void GetNatureTypeTable(IEnumerable<AlienSpeciesAssessment2023ImpactedNatureTypes> natureTypesList)
    {
        <table class="big-data-table nature-table-setup">
            <tr>
                <th>@Constants.AlienSpeciesTables.NaturetypeNameTableColumn </th>
                <th>@Html.Raw(Constants.AlienSpeciesTables.ColonizedAreaTableColumn) </th>
                <th>@Html.Raw(Constants.AlienSpeciesTables.StateChangeTableColumn) </th>
                <th>@Html.Raw(Constants.AlienSpeciesTables.AffectedAreaTableColumn) </th>
                <th>@Html.Raw(@Constants.AlienSpeciesTables.BackgroundTableColumn) </th>
            </tr>
            @{
                foreach (var natureType in natureTypesList)
                {
                    <tr>
                        <td><b class="only_mobile">@Constants.AlienSpeciesTables.NaturetypeNameTableColumn:</b>@natureType.Name</td>
                        <td><b class="only_mobile">@Helpers.removeLineBreaksForMobile(Constants.AlienSpeciesTables.ColonizedAreaTableColumn):</b>@natureType.ColonizedArea</td>
                        <td>
                            <b class="only_mobile">@removeLineBreaksForMobile(Constants.AlienSpeciesTables.StateChangeTableColumn):</b>
                            @{
                                if (natureType.StateChange != null)
                                {
                                    <ul>
                                        @{
                                            foreach (var state in natureType.StateChange)
                                            {
                                                <li>@state.DisplayName()</li>
                                            }
                                        }
                                    </ul>
                                }
                            }
                        </td>
                        <td><b class="only_mobile">@removeLineBreaksForMobile(Constants.AlienSpeciesTables.AffectedAreaTableColumn):</b>@natureType.AffectedArea</td>
                        <td>
                            <b class="only_mobile">@Helpers.removeLineBreaksForMobile(@Constants.AlienSpeciesTables.BackgroundTableColumn):</b>
                            @{
                                <ul>
                                    @{
                                        foreach (var bg in natureType.Background)
                                        {
                                            <li>@bg.DisplayName()</li>
                                        }
                                    }
                                </ul>
                            }
                        </td>
                    </tr>
                }
            }
        </table>
    }
}

<div id="@nameof(Constants.HeadingsNo.ImpactedNatureTypes)">
    <div class="page_section_header">
        <h2>@Constants.HeadingsNo.ImpactedNatureTypes</h2>
    </div>

    <p is-visible="!showNatureTypes && !showMicroHabitats">Det er ikke angitt noen naturtypetilhørighet for arten.</p>
       
    <div is-visible="showNatureTypes || showMicroHabitats">
        <p is-visible="isSvalbard">
            @Constants.ImpactedNatureTypesDescriptionSvalbard
        </p>
        <p is-visible="!isSvalbard">
            @Constants.ImpactedNatureTypesDescription
        </p>
        <div is-visible="showNatureTypes">
            <div is-visible="hasCurrentTimeHorizonTypes">
                <p class="big-data-table table-description">
                    <b>@Constants.AlienSpeciesTables.ImpactedNatureTypesCurrentTableTitle</b>
                    @Constants.AlienSpeciesTables.ImpactedNatureTypesCurrentTableDescription
                </p>
                @{ GetNatureTypeTable(natureTypes.Where(x => x.TimeHorizon == AlienSpeciesAssessment2023TimeHorizon.now)); }
            </div>
            <br>
            <div is-visible="hasFutureTimeHorizonTypes">
                <p class="big-data-table table-description">
                    <b>@Constants.AlienSpeciesTables.ImpactedNatureTypesFutureTableTitle</b>
                    @Constants.AlienSpeciesTables.ImpactedNatureTypesFutureTableDescription
                </p>
                @{ GetNatureTypeTable(natureTypes.Where(x => x.TimeHorizon == AlienSpeciesAssessment2023TimeHorizon.future)); }
            </div>
        </div>

        <div is-visible="showMicroHabitats">
            <h3>Livsmedium</h3>
            <p>
                For noen arter er det mer riktig å angi <a href="https://www.artsdatabanken.no/Pages/137826/Livsmedium">livsmedium</a> enn naturtyper. Et eksempel er parasittiske arter som lever i og på dyr, eller arter som lever i dyremøkk, og hvor naturtypen dyret eller møkka befinner seg i betyr lite. Livsmedium har ingen effekter på artens risikokategori.
            </p>
            <table class="numbers-table">
                <caption class="table-title"><b>Artens livsmedium.</b>For hvert livsmedium er det angitt om situasjonen gjelder i dag eller i fremtiden (tidshorisont). Hvis arten bruker en annen art som livsmedium er dette angitt (art/takson). </caption>
                <tr>
                    <td>Livsmedium</td>
                    <td>Art/Takson</td>
                    <td>Tidshorisont</td>
                </tr>
                @foreach (var habitat in Model.Assessment.MicroHabitat)
                {
                    <tr>
                        <td>@habitat.Name</td>
                        <td>@Html.Raw(Helpers.FormatScientificNameElement(habitat.ScientificName)) @habitat.ScientificNameAuthor @habitat.VernacularName</td>
                        <td>@habitat.TimeHorizon.DisplayName()</td>
                    </tr>
                }
            </table>
        </div>

        <div is-visible="showRegionalNatureVariationList">
            <h3>Regional naturvariasjon</h3>
            <p>
                Regional naturvariasjon omfatter variasjon i makroklimatiske forhold og/eller andre miljøforhold som gir opphav til mønstre på stor romlig skala (les mer <a href="https://artsdatabanken.no/Pages/182001/Regional_naturvariasjon">her</a>). Her inngår bioklimatiske soner og seksjoner og/eller kystvannssoner og -seksjoner hvor arten finnes i dag, eller antas å kunne finnes i framtiden (innenfor vurderingsperioden).
            </p>
                <div is-visible="@hasCoastLineSections">
                    <p>Utbredelse i kystvannssoner og -seksjoner:</p>
                    @foreach (var coastLineSection in assessment.CoastLineSections) 
                    {
                        <ul is-visible="coastLineSection.ZoneList.Any(x => !string.IsNullOrEmpty(x))">
                            <li>@coastLineSection.ClimateZone.DisplayName(): @coastLineSection.ZoneList.Where(x => !string.IsNullOrEmpty(x)).Select(x => x.ToLowerInvariant()).JoinAnd(", ", " og ").</li>
                        </ul>    
                    }
                </div>
                <div is-visible="@hasCurrentBioClimateZones">
                    <p>Utbredelse i bioklimatiske soner og seksjoner:</p>
                    @foreach (var currentBioClimateZone in assessment.CurrentBioClimateZones)
                    {
                        <ul is-visible="currentBioClimateZone.ZoneList.Any(x => !string.IsNullOrEmpty(x))">
                            <li>@currentBioClimateZone.ClimateZone.DisplayName(): @currentBioClimateZone.ZoneList.Where(x => !string.IsNullOrEmpty(x)).Select(x => x.ToLowerInvariant()).JoinAnd(", ", " og ").</li>
                        </ul>
                    }
                </div>
                <div is-visible="@hasArcticBioClimateZones">
                    <p>Utbredelse i bioklimatiske soner og seksjoner i Arktis:</p>
                    @foreach (var arcticBioClimateZone in assessment.ArcticBioClimateZones)
                    {
                        <ul is-visible="arcticBioClimateZone.ZoneList.Any(x => !string.IsNullOrEmpty(x))">
                            <li>@arcticBioClimateZone.ClimateZone.DisplayName(): @arcticBioClimateZone.ZoneList.Where(x => !string.IsNullOrEmpty(x)).Select(x => x.ToLowerInvariant()).JoinAnd(", ", " og ").</li>
                        </ul>
                    }
                </div>
        </div>
    </div>

</div>
