@using Assessments.Mapping.AlienSpecies.Model.Enums;
@model AlienSpeciesDetailViewModel

@{
    var areaText = Model.Assessment.EvaluationContext == Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciesAssessment2023EvaluationContext.N ? "i Norge" : "på Svalbard";
    var comingFromText = Model.Assessment.EvaluationContext == Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciesAssessment2023EvaluationContext.N ? "Norge" : "Svalbard";
    var isLimnic = Model.Assessment.Environment == AlienSpeciesAssessment2023Environment.Limnisk || Model.Assessment.Environment == AlienSpeciesAssessment2023Environment.LimMar || Model.Assessment.Environment == AlienSpeciesAssessment2023Environment.LimTer || Model.Assessment.Environment == AlienSpeciesAssessment2023Environment.LimMarTer;
    var isTerrestrial = Model.Assessment.Environment == AlienSpeciesAssessment2023Environment.Terrestrisk || Model.Assessment.Environment == AlienSpeciesAssessment2023Environment.MarTer || Model.Assessment.Environment == AlienSpeciesAssessment2023Environment.LimTer || Model.Assessment.Environment == AlienSpeciesAssessment2023Environment.LimMarTer;
    var isMarine = Model.Assessment.Environment == AlienSpeciesAssessment2023Environment.Marint || Model.Assessment.Environment == AlienSpeciesAssessment2023Environment.LimMar || Model.Assessment.Environment == AlienSpeciesAssessment2023Environment.MarTer || Model.Assessment.Environment == AlienSpeciesAssessment2023Environment.LimMarTer;

    string GetArrivedCountryFromString(List<AlienSpeciesAssessment2023ArrivedCountryFrom> textList)
    {
        var stringList = new List<string>();
        foreach (var element in textList)
        {
            stringList.Add(element.DisplayName().ToLowerInvariant());
        }
        return Helpers.GetListString(stringList);
    }

    string GetNaturalOriginsString(List<AlienSpeciesAssessment2023NaturalOriginContinent> textList)
    {
        var stringList = new List<string>();
        foreach (var element in textList)
        {
            stringList.Add(element.DisplayName().ToLowerInvariant());
        }
        return Helpers.GetListString(stringList);
    }

    string GetNaturalOriginsMarineString(List<AlienSpeciesAssessment2023NaturalOriginMarine> textList)
    {
        var stringList = new List<string>();
        foreach (var element in textList)
        {
            stringList.Add(element.DisplayName().ToLowerInvariant());
        }
        return Helpers.GetListString(stringList);
    }

    string GetReproductionString()
    {
        var hasSexual = Model.Assessment.ReproductionSexual;
        var hasAsexual = Model.Assessment.ReproductionAsexual;
        var speciesLevel = Helpers.FixSpeciesLevel("{Art}en", Model.Assessment.ScientificName.ScientificNameRank);
        if (hasSexual && !hasAsexual)
            return $"{speciesLevel} har seksuell reproduksjon.";
        else if (!hasSexual && hasAsexual)
            return $"{speciesLevel} har aseksuell reproduksjon.";
        else if (hasSexual && hasAsexual)
            return $"{speciesLevel} har både seksuell og aseksuell reproduksjon.";
        return string.Empty;
    }
}

<div id="@nameof(Constants.HeadingsNo.KnowMore)">
    <div class="page_section_header">
        <h2>@Constants.HeadingsNo.KnowMore @Helpers.FixSpeciesLevel("{art}en", Model.Assessment.ScientificName.ScientificNameRank)</h2>
        <a href="#@nameof(Constants.HeadingsNo.TableOfContents)">Tilbake til toppen</a>
    </div>
    <div>
        <h3>Artens etableringsklasse @areaText</h3>
        <p>
            Hvor godt etablert en fremmed art er, kan variere fra at den ikke finnes @areaText per i dag, til å ha sporadiske, kortlevde forekomster via selvstendig reproduksjon til kraftig ekspansjon. 
        </p>
        <p>
            @Helpers.FixSpeciesLevel("{Art}ens", Model.Assessment.ScientificName.ScientificNameRank) regionalt fremmede forekomster vurderes å ha følgende etableringsklasse: @Model.Assessment.EstablishmentCategory.
        </p>
        <table is-visible="Model.Assessment.YearsFirstRecord.ObservedEstablishmentInNorway.Count > 0" class="numbers-table">
            <caption>Første observasjon av arten i Norge</caption>
            <tbody>
                <tr>
                    <td>Første observasjon i Norge av…</td>
                    <td>Årstall</td>
                    <td>Usikkerhet i årstall (> ± 5 år)</td>
                </tr>
                @foreach(var record in Model.Assessment.YearsFirstRecord.ObservedEstablishmentInNorway)
                {
                    <tr>
                        <td>@record.recordType.DisplayName()</td>
                        <td>@record.year</td>
                        <td>@( record.isUncertaintyYear ? "Ja" : "Nei" )</td>
                    </tr>
                }
            </tbody>
        </table>
        <p is-visible="!string.IsNullOrEmpty(Model.Assessment.YearsFirstRecord.Description)">
            @Html.Raw(Model.Assessment.YearsFirstRecord.Description)
        </p>
        <p>Kommer til @comingFromText fra: @( GetArrivedCountryFromString(Model.Assessment.ArrivedCountryFrom) )
        </p>
        <p>@Model.Assessment.ArrivedCountryFromDetails</p>
    </div>
    <div>
        <h3>Global utbredelse</h3>
        <p>Artens naturlige utbredelse.</p>
        <p>
            Naturlig utbredelse omfatter de områdene arten forekommer i uten at det ligger menneskelig transport bak (dvs. alle former for tilsikta eller utilsikta forflytning av arten).
        </p>
        <div is-visible="isLimnic || isTerrestrial">
            <ul is-visible="Model.Assessment.NaturalOrigins != null || Model.Assessment.NaturalOrigins.Count != 0">
                @foreach(var origin in Model.Assessment.NaturalOrigins)
                {
                    <li is-visible="origin.Continent != null">@origin.ClimateZone.DisplayName(): @(GetNaturalOriginsString(origin.Continent))</li>
                }
            </ul>
            <br />
            <p>@Html.Raw(Model.Assessment.NaturalOriginUnknownDocumentation)</p>
        </div>
        <div is-visible="isMarine">
            <p is-visible="Model.Assessment.NaturalOriginMarine != null && Model.Assessment.NaturalOriginMarine.Count != 0">
                @Helpers.FixSpeciesLevel("{Art}ens", Model.Assessment.ScientificName.ScientificNameRank) naturlige marine utbredelse: @(GetNaturalOriginsMarineString(Model.Assessment.NaturalOriginMarine)).
            </p>
            <p>@Html.Raw(Model.Assessment.NaturalOriginMarineDetails)</p>
        </div>
    </div>
    <div>
        <h3>Reproduksjon og generasjonstid</h3>
        <p>@GetReproductionString()</p>
        <p is-visible="Model.Assessment.GenerationTime != null">Generasjonstid (i år): @Model.Assessment.GenerationTime.</p>
    </div>
</div>
