@model SpeciesAssessment2021
@*
    // Information about the Assessment

    MOST OF THESE FIELDS ARE MISSING MAPPING.
    AWAIT TRANSFORMATION
*@

@{
    SpeciesAssessment2021 assessment = Model;
}

@*
    Ikke relevant for LC-arter // @Model.AssessmentInitialClassification == "sikkerBestandLC"
    Ikke relevant for rødlistede arter // @Model.AssessmentInitialClassification == "rodlisteVurdertArt"

    Nå er forøvrig disse gitt av kategori, men det får så være...



    1. Oppfølger vurderingen ett av de tre vurderingskriteriene? List opp kriteriene.
    - Alle vurderinger som er satt som rødlistevurdert oppfyller minst et kriterie.
    - Hvilket kriterie som innfris skal listes i EvaluationJustification

    2. Er kategorien direkte satt? Isåfall har den en ANNEN verdi enn rodlisteVurdertArt for AssessmentInitialClassification.

    3. Vurderinger som IKKE innfrir et av vurderingskriteriene skal sammenfalle ikkevurderte arter

    4. For de ikkevurderte finnes det egne forklaringer. Feltet markert i AssessmentInitialClassification bestemmer hvilken
        som er relevant der det er flere. Aldri gi ut andre forklaringer enn den det tilhører.

    // TODO: MANGLER SJEKKER FOR OM TiNG FAKTISK FINNES I GLOSSARY
    // TODO: LINK TIL INFOSIDE OM INKLUDERING
*@

@{

    string direkteSattKategori = "Denne arten har fått sin kategori satt direkte";
    if (@Model.AssessmentInitialClassification == "rodlisteVurdertArt")
    {
        // HIDE FOR NOW: maybe forever.
        direkteSattKategori = "Dette arten har fått sin kategori etter en full vurdering mot alle kriteriene .";
    }


    string heading = "";
    string inclusion = "";

    string reason_heading = "";
    string reason_description = "";

    if (@Model.AssessmentInitialClassification == "rodlisteVurdertArt" ||
        @Model.AssessmentInitialClassification == "utdoddINorgeRE" ||
        @Model.AssessmentInitialClassification == "sikkerBestandLC" ||
        @Model.AssessmentInitialClassification == "storUsikkerhetOmKorrektKategoriDD")
    {
        heading = @ViewBag.glossary["inkluderingskriterier"]["hvorfor"]["title"];
        inclusion = @ViewBag.glossary["inkluderingskriterier"]["hvorfor"]["description"];
        if (!string.IsNullOrEmpty(Model.EvaluationJustification))
        {
            reason_heading = @ViewBag.glossary["inkluderingskriterier"][Model.EvaluationJustification]["title"];
            reason_description += @ViewBag.glossary["inkluderingskriterier"][Model.EvaluationJustification]["description"];
        }
        else
        {
            inclusion += @ViewBag.glossary["inkluderingskriterier"]["hvorfor"]["else"];
        }
    }
    else if(Model.AssessmentInitialClassification == "fremmedArtNA" ||
        Model.AssessmentInitialClassification == "begrensetForekomstNA" ||
        Model.AssessmentInitialClassification == "kunnskapsStatusNE")
    {
        heading = @ViewBag.glossary["inkluderingskriterier"]["hvorforikke"]["title"];
        inclusion = @ViewBag.glossary["inkluderingskriterier"]["hvorforikke"]["description"];

        if (Model.AssessmentInitialClassification == "fremmedArtNA")
        {
            reason_heading = @ViewBag.glossary["inkluderingskriterier"][Model.AssessmentInitialClassification]["title"];
            reason_description += @ViewBag.glossary["inkluderingskriterier"][Model.AssessmentInitialClassification]["description"];
        }
        else if (Model.AssessmentInitialClassification == "begrensetForekomstNA")
        {
            if (!string.IsNullOrEmpty(Model.RationaleNotApplicable))
            {
                reason_heading = @ViewBag.glossary["inkluderingskriterier"][Model.RationaleNotApplicable]["title"];
                reason_description += @ViewBag.glossary["inkluderingskriterier"][Model.RationaleNotApplicable]["description"];
            }
        }
        else if (Model.AssessmentInitialClassification == "kunnskapsStatusNE")
        {

            if (!string.IsNullOrEmpty(Model.RationaleNotEvaluated))
            {
                reason_heading = @ViewBag.glossary["inkluderingskriterier"][Model.RationaleNotEvaluated]["title"];
                reason_description += @ViewBag.glossary["inkluderingskriterier"][Model.RationaleNotEvaluated]["description"];
            }
        }
        else
        {
            inclusion = @ViewBag.glossary["inkluderingskriterier"]["hvorforikke"]["description"];
            inclusion += @ViewBag.glossary["inkluderingskriterier"]["hvorforikke"]["else"];
        }
    }
}

<div class="page_section">
    <h3>@heading</h3>
    <p>@inclusion</p>
    <h4>@reason_heading</h4>
    <p>@Html.Raw(reason_description)</p>
    <p style="display:none">@Html.Raw(direkteSattKategori)</p>
</div>