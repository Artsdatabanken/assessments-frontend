@model Assessments.Frontend.Web.Models.TestViewModel

@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common
@using Assessments.Frontend.Web.Infrastructure

@{
    ViewBag.Title = "Assessments api client test";
}

<div class="col-md-12">

    <div class="row">

        <h3>
            Rødliste 2015
            <small class="text-muted">viser @Model.Redlist2015Results.Count av @Model.Redlist2015Results.TotalItemCount på side @(Model.Redlist2015Results.PageCount < Model.Redlist2015Results.PageNumber ? 0 : Model.Redlist2015Results.PageNumber) av @Model.Redlist2015Results.PageCount</small>
        </h3>

        <form asp-action="Index" method="get">

            <label asp-for="Name"></label><input asp-for="Name" />

        </form>

        <table class="table table-striped table-hover">

            <thead>
                <tr>
                    <td>LatinsknavnId</td>
                    <td>VurdertVitenskapeligNavn</td>
                    <td>Kategori</td>
                </tr>
            </thead>

            @foreach (var item in Model.Redlist2015Results)
            {
                <tr>
                    <td>
                        <a asp-action="Detail" asp-route-id="@item.LatinsknavnId" asp-route-vurderingscontext="@item.VurderingsContext" asp-route-year="2015">
                            @item.LatinsknavnId
                        </a>
                    </td>
                    <td>@item.VurdertVitenskapeligNavn</td>
                    <td>@item.Kategori</td>
                </tr>
            }

        </table>

    </div>

    @Html.PagedListPager(Model.Redlist2015Results, page => Url.Action("Index", Context.GetQueryParameters(new Dictionary<string, string> { { "Page", page.ToString() } })), new PagedListRenderOptions
        {
            PageClasses = new[] { "page-link" },
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" }
        })

</div>