@model CriteriaExplanationViewModel
@using Assessments.Mapping.AlienSpecies.Model.Enums
@inject IStringLocalizer<SharedResourcesAlienSpecies> Localizer
@inject IStringLocalizer<SharedResources> LocalizerShared
@inject IHtmlLocalizer<SharedResourcesAlienSpecies> LocalizerHtml

@{
    var isDecisiveCriteria = Model.Criteria == Model.AlienSpeciesDetailViewModel.Assessment.DecisiveCriteria;
    // We need to know which criteria are not used, but still has uncertainty, and who does not have uncertainty or is used at all. 
    var unusedCriteriaWithoutUncertainty = new string(Model.Criteria.Where(x => Model.AlienSpeciesDetailViewModel.Assessment.Criteria.Any(y => y.CriteriaLetter.ToString() == x.ToString() && y.UncertaintyValues.Count() == 1)).ToArray());

    var assessment = Model.AlienSpeciesDetailViewModel.Assessment;
    var isNrOrEvaluatedAtAnotherLevel = assessment.Category == AlienSpeciesAssessment2023Category.NR || assessment.AlienSpeciesCategory == AlienSpeciecAssessment2023AlienSpeciesCategory.TaxonEvaluatedAtAnotherLevel;
    var showIsNk = assessment.Category == AlienSpeciesAssessment2023Category.NK;
    var showLowInvasionPotential = assessment.ScoreInvasionPotential == AlienSpeciesAssessment2023MatrixAxisScore.InvasionPotential.Small;
    var showHigherInvasionPotential = assessment.ScoreInvasionPotential != AlienSpeciesAssessment2023MatrixAxisScore.InvasionPotential.Small && assessment.ScoreInvasionPotential != AlienSpeciesAssessment2023MatrixAxisScore.InvasionPotential.Unknown;

    var uncertaintyA = assessment.Criteria.Where(x => x.CriteriaLetter == AlienSpeciesAssessment2023CriteriaLetter.A).FirstOrDefault();
    var uncertaintyB = assessment.Criteria.Where(x => x.CriteriaLetter == AlienSpeciesAssessment2023CriteriaLetter.B).FirstOrDefault();
    var uncertaintyC = assessment.Criteria.Where(x => x.CriteriaLetter == AlienSpeciesAssessment2023CriteriaLetter.C).FirstOrDefault();
    var uncertaintyD = assessment.Criteria.Where(x => x.CriteriaLetter == AlienSpeciesAssessment2023CriteriaLetter.D).FirstOrDefault();
    var uncertaintyE = assessment.Criteria.Where(x => x.CriteriaLetter == AlienSpeciesAssessment2023CriteriaLetter.E).FirstOrDefault();
    var uncertaintyF = assessment.Criteria.Where(x => x.CriteriaLetter == AlienSpeciesAssessment2023CriteriaLetter.F).FirstOrDefault();
    var uncertaintyG = assessment.Criteria.Where(x => x.CriteriaLetter == AlienSpeciesAssessment2023CriteriaLetter.G).FirstOrDefault();
    var uncertaintyH = assessment.Criteria.Where(x => x.CriteriaLetter == AlienSpeciesAssessment2023CriteriaLetter.H).FirstOrDefault();
    var uncertaintyI = assessment.Criteria.Where(x => x.CriteriaLetter == AlienSpeciesAssessment2023CriteriaLetter.I).FirstOrDefault();

    var isSimplifiedEstimation = assessment.MedianLifetimeEstimationMethod == AlienSpeciesAssessment2023MedianLifetimeEstimationMethod.SimplifiedEstimation;
    var isAcceptedSimplifiedEstimation = assessment.IsAcceptedSimplifiedEstimate == true;
    var isAlien = assessment.AlienSpeciesCategory == AlienSpeciecAssessment2023AlienSpeciesCategory.AlienSpecie || assessment.AlienSpeciesCategory == AlienSpeciecAssessment2023AlienSpeciesCategory.RegionallyAlien;
    var isDoorknockerOrEffectWithoutReproduction = assessment.AlienSpeciesCategory == AlienSpeciecAssessment2023AlienSpeciesCategory.DoorKnocker || assessment.AlienSpeciesCategory == AlienSpeciecAssessment2023AlienSpeciesCategory.EffectWithoutReproduction;

    var showSimplifiedEstimateAcceptedAlien = isSimplifiedEstimation && isAcceptedSimplifiedEstimation && isAlien;
    var showSimplifiedEstimateNotAcceptedAlien = isSimplifiedEstimation && !isAcceptedSimplifiedEstimation && isAlien;
    var showSimplifiedEstimateAcceptedDoorKnockerOrEffectWithoutReproduction = isSimplifiedEstimation && isAcceptedSimplifiedEstimation && isDoorknockerOrEffectWithoutReproduction;
    var showSimplifiedEstimateNotAcceptedDoorKnockerOrEffectWithoutReproduction = isSimplifiedEstimation && !isAcceptedSimplifiedEstimation && isDoorknockerOrEffectWithoutReproduction;

    var showNumericalEstimation = assessment.MedianLifetimeEstimationMethod == AlienSpeciesAssessment2023MedianLifetimeEstimationMethod.NumericalEstimation;
    var showViableAnalysis = assessment.MedianLifetimeEstimationMethod == AlienSpeciesAssessment2023MedianLifetimeEstimationMethod.ViableAnalysis;

    var isSpatiotemporalDataset = assessment.ExpansionSpeedEstimationMethod == AlienSpeciesAssessment2023ExpansionSpeedEstimationMethod.SpatioTemporalDataset;
    var isEstimatedIncreaseInAOOReproducingUnaided = assessment.ExpansionSpeedEstimationMethod == AlienSpeciesAssessment2023ExpansionSpeedEstimationMethod.EstimatedIncreaseInAOOReproducingUnaided;
    var isEstimatedIncreaseInAOOReproducingUnaidedFutureExpansion = assessment.ExpansionSpeedEstimationMethod == AlienSpeciesAssessment2023ExpansionSpeedEstimationMethod.EstimatedIncreaseInAOOReproducingUnaidedFutureExpansion;
    var isEstimatedIncreaseInAOODoorKnockers = assessment.ExpansionSpeedEstimationMethod == AlienSpeciesAssessment2023ExpansionSpeedEstimationMethod.EstimatedIncreaseInAOODoorKnockers;

    var showNoEcologicalEffect = assessment.ScoreEcologicalEffect == AlienSpeciesAssessment2023MatrixAxisScore.EcologicalEffect.NotKnown && !Model.Criteria.Any(x => Model.AlienSpeciesDetailViewModel.Assessment.Criteria.Any(y => y.CriteriaLetter.ToString() == x.ToString() && y.UncertaintyValues.Count() > 1));

    var showFTable = assessment.ImpactedNatureTypes.Any(x => x.IsThreatened == true && HasAffectedArea(x.AffectedArea));
    var showGTable = assessment.ImpactedNatureTypes.Any(x => x.IsThreatened == false && HasAffectedArea(x.AffectedArea));
    var showHTable = assessment.GeneticContamination != null && assessment.GeneticContamination.Count() != 0;
    var showITable = assessment.ParasitePathogenTransmission != null && assessment.ParasitePathogenTransmission.Count() != 0;
    var showGeneticContaminationUncertaintyDocumentation = !string.IsNullOrEmpty(assessment.GeneticContaminationUncertaintyDocumentation) && assessment.Criteria.Any(x => x.CriteriaLetter == AlienSpeciesAssessment2023CriteriaLetter.H && x.UncertaintyValues.Count() > 1);
    var showParasitePathogenTransmissionUncertaintyDocumentation = !string.IsNullOrEmpty(assessment.ParasitePathogenTransmissionUncertaintyDocumentation) && assessment.Criteria.Any(x => x.CriteriaLetter == AlienSpeciesAssessment2023CriteriaLetter.I && x.UncertaintyValues.Count() > 1);

    // needed to check if a criteria has content, for deciding if it should be shown in nonDecisiveCriteria tab
    var hasContentA = showSimplifiedEstimateAcceptedAlien || showSimplifiedEstimateNotAcceptedAlien || showSimplifiedEstimateAcceptedDoorKnockerOrEffectWithoutReproduction || showSimplifiedEstimateNotAcceptedDoorKnockerOrEffectWithoutReproduction || showNumericalEstimation || showViableAnalysis;
    var hasContentB = isSpatiotemporalDataset || isEstimatedIncreaseInAOOReproducingUnaided || isEstimatedIncreaseInAOOReproducingUnaidedFutureExpansion || isEstimatedIncreaseInAOODoorKnockers;
    var hasContentC = assessment.ImpactedNatureTypes != null && assessment.ImpactedNatureTypes.Count != 0 && assessment.ImpactedNatureTypes.Any(x => x.ColonizedArea != "0.0");
    var hasContentD = (assessment.SpeciesSpeciesInteractionsThreatenedSpecies != null && assessment.SpeciesSpeciesInteractionsThreatenedSpecies.Count() != 0) || (assessment.SpeciesNaturetypeInteractionsThreatenedSpecies != null && assessment.SpeciesNaturetypeInteractionsThreatenedSpecies.Count() != 0) || (!string.IsNullOrEmpty(assessment.EffectsOnThreathenedSpeciesUncertaintyDocumentation) && HasUncertainty(uncertaintyD));
    var hasContentE = (assessment.SpeciesSpeciesInteractions != null && assessment.SpeciesSpeciesInteractions.Count() != 0) || (assessment.SpeciesNaturetypeInteractions != null && assessment.SpeciesNaturetypeInteractions.Count() != 0) || (!string.IsNullOrEmpty(assessment.EffectsOnOtherNativeSpeciesUncertaintyDocumentation) && HasUncertainty(uncertaintyE));
    var hasContentF = showFTable || !string.IsNullOrEmpty(assessment.ThreatenedNatureTypesAffectedDomesticDescription);
    var hasContentG = showGTable || !string.IsNullOrEmpty(assessment.CommonNatureTypesAffectedDomesticDescription);
    var hasContentH = showHTable || showGeneticContaminationUncertaintyDocumentation;
    var hasContentI = showITable || showParasitePathogenTransmissionUncertaintyDocumentation;

    // If decisive criteria pane, show if decisive. If not decisive criteria pane, show if criteria is used, or if it has uncertainty.
    var criteriaHasA = (isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.A))) || (!isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.A)) && (!unusedCriteriaWithoutUncertainty.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.A)) || hasContentA));
    var criteriaHasB = (isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.B))) || (!isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.B)) && (!unusedCriteriaWithoutUncertainty.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.B)) || hasContentB));
    var criteriaHasC = (isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.C))) || (!isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.C)) && (!unusedCriteriaWithoutUncertainty.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.C)) || hasContentC));
    var criteriaHasD = (isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.D))) || (!isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.D)) && (!unusedCriteriaWithoutUncertainty.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.D)) || hasContentD));
    var criteriaHasE = (isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.E))) || (!isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.E)) && (!unusedCriteriaWithoutUncertainty.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.E)) || hasContentE));
    var criteriaHasF = (isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.F))) || (!isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.F)) && (!unusedCriteriaWithoutUncertainty.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.F)) || hasContentF));
    var criteriaHasG = (isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.G))) || (!isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.G)) && (!unusedCriteriaWithoutUncertainty.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.G)) || hasContentG));
    var criteriaHasH = (isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.H))) || (!isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.H)) && (!unusedCriteriaWithoutUncertainty.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.H)) || hasContentH));
    var criteriaHasI = (isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.I))) || (!isDecisiveCriteria && Model.Criteria.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.I)) && (!unusedCriteriaWithoutUncertainty.Contains(nameof(AlienSpeciesAssessment2023CriteriaLetter.I)) || hasContentI));

    string UnusedCriteriaInvationPotential()
    {
        var notUsed = string.Empty;
        notUsed += hasContentA ? string.Empty : nameof(AlienSpeciesAssessment2023CriteriaLetter.A);
        notUsed += hasContentB ? string.Empty : nameof(AlienSpeciesAssessment2023CriteriaLetter.B);
        notUsed += hasContentC ? string.Empty : nameof(AlienSpeciesAssessment2023CriteriaLetter.C);

        if (notUsed.Length > 1)
        {
            notUsed = String.Join(", ", notUsed.ToArray());
        }
        return notUsed;
    } 

    string UnusedCriteriaEcologicalEffect()
    {
        var notUsed = string.Empty;;
        notUsed += hasContentD ? string.Empty : nameof(AlienSpeciesAssessment2023CriteriaLetter.D);
        notUsed += hasContentE ? string.Empty : nameof(AlienSpeciesAssessment2023CriteriaLetter.E);
        notUsed += hasContentF ? string.Empty : nameof(AlienSpeciesAssessment2023CriteriaLetter.F);
        notUsed += hasContentG ? string.Empty : nameof(AlienSpeciesAssessment2023CriteriaLetter.G);
        notUsed += hasContentH ? string.Empty : nameof(AlienSpeciesAssessment2023CriteriaLetter.H);
        notUsed += hasContentI ? string.Empty : nameof(AlienSpeciesAssessment2023CriteriaLetter.I);

        if (notUsed.Length > 1)
        {
            notUsed = String.Join(", ", notUsed.ToArray());
        }
        return notUsed;
    }

    bool HasUncertainty(AlienSpeciesAssessment2023Criterion uncertainty)
    {
        return AlienSpeciesHelpers.GetUncertaintyLow(uncertainty) != 0 || AlienSpeciesHelpers.GetUncertaintyHigh(uncertainty) != 0;
    }

    bool HasAffectedArea(string affectedArea)
    {
        float area;
        if (float.TryParse(affectedArea, out area))
        {
            return area != (float)0;
        }
        return true;
    }

    void GetSpeciesTableDesktop(List<AlienSpeciesAssessment2023SpeciesSpeciesInteraction> impacts, bool shouldBeThreatened)
    {
        <table class="big-data-table">
            <caption class="table-title">
                @if (shouldBeThreatened)
                {
                    <b>@Localizer["alien_species_tables_D_criteria_table_title"]</b>
                    @Localizer["alien_species_tables_D_criteria_table_text"]
                }
                @if (!shouldBeThreatened)
                {
                    <b>@Localizer["alien_species_tables_E_criteria_table_title"]</b>
                    @Localizer["alien_species_tables_E_criteria_table_text"]
                } 
                
            </caption>
            <tr>
                <th>@Localizer["native_species"]</th>
                <th>@LocalizerHtml["red_list_category_2021_html"]</th>
                <th>@Localizer["keystone_species"]</th>
                <th>@Localizer["interaction_strength"]</th>
                <th>@Localizer["geographical_extent"]</th>
                <th>@Localizer["interaction_type"]</th>
                @if (impacts.Any(x => x.Background.Count() != 0))
                {
                    <th>@LocalizerHtml["documentation_type"]</th>
                }
            </tr>
            @foreach (var impact in impacts)
            {
                <tr>
                    <td>@impact.VernacularName <br> @Html.Raw(Helpers.FormatScientificNameElement(impact.ScientificName)) @impact.ScientificNameAuthor</td>
                    <td>@impact.RedListCategory - @impact.RedListCategory.DisplayName()</td>
                    <td>@(impact.KeyStoneSpecie ? "ja" : "nei")</td>
                    <td>@impact.InteractionStrength.DisplayName()</td>
                    <td>@impact.Scale.DisplayName()</td>
                    <td>@impact.InteractionType.DisplayName()</td>
                    @if (@impact.Background.Count() != 0)
                    {
                        <td>
                            <ul>
                                @foreach (var background in impact.Background)
                                {
                                    <li>@background.DisplayName()</li>
                                }
                            </ul>
                        </td>
                    }
                </tr>
            }
        </table>
    }

    void GetSpeciesTablesMobile(List<AlienSpeciesAssessment2023SpeciesSpeciesInteraction> impacts)
    {
        @foreach (var impact in impacts)
        {
            <table class="big-data-table">
                <caption class="table-title">Stedegen art: @impact.VernacularName @Html.Raw(Helpers.FormatScientificNameElement(impact.ScientificName)) @impact.ScientificNameAuthor</caption>
                <tr>
                    <td>@Html.Raw(@Constants.AlienSpeciesTables.RedListCategoryTableColumn)</td>
                    <td>@impact.RedListCategory - @impact.RedListCategory.DisplayName()</td>
                </tr>
                <tr>
                    <td>@Localizer["keystone_species"]</td>
                    <td>@(impact.KeyStoneSpecie ? "ja" : "nei")</td>
                </tr>
                <tr>
                    <td>interaksjonens styrke</td>
                    <td>@impact.InteractionStrength.DisplayName()</td>
                </tr>
                <tr>
                    <td>geografisk omfang</td>
                    <td>@impact.Scale.DisplayName()</td>
                </tr>
                <tr>
                    <td>type interaksjon</td>
                    <td>@impact.InteractionType.DisplayName()</td>
                </tr>
                @if (@impact.Background.Count() != 0)
                {
                    <tr>
                        <td>vurderingsgrunnlag</td>
                        <td>
                            <ul>
                                @foreach (var background in impact.Background)
                                {
                                    <li>@background.DisplayName()</li>
                                }
                            </ul>
                        </td>
                    </tr>
                }
            </table>
        }
    }

    void GetNatureTypeTableDesktop(List<AlienSpeciesAssessment2023SpeciesNaturetypeInteraction> impacts, bool shouldBeThreatened)
    {
        <table class="big-data-table">
            <caption class="table-title">
                @if (shouldBeThreatened)
                {
                    <b>@Localizer["alien_species_tables_D_criteria_society_table_title"]</b>
                    @Localizer["alien_species_tables_D_criteria_society_table_description"]
                }
                @if (!shouldBeThreatened)
                {
                    <b>@Localizer["alien_species_tables_E_criteria_society_table_title"]</b>
                    @Localizer["alien_species_tables_E_criteria_society_table_description"]
                } 
                
            </caption>
            <tr>
                <th>@LocalizerHtml["affected_species_naturetype"]</th>
                <th>@LocalizerHtml["keystone_or_threatened"]</th>
                <th>@Localizer["interaction_strength"]</th>
                <th>@Localizer["geographical_extent"]</th>
                <th>@Localizer["interaction_type"]</th>
                <th>@LocalizerHtml["documentation_type"]</th>
            </tr>
            @foreach (var impact in impacts)
            {
                <tr>
                    <td>@impact.Name</td>
                    <td>@(impact.KeyStoneSpecie ? "ja" : "nei")</td>
                    <td>@impact.InteractionStrength.DisplayName()</td>
                    <td>@impact.Scale.DisplayName()</td>
                    <td>@impact.InteractionType.DisplayName()</td>
                    <td>
                        <ul>
                            @foreach (var background in impact.Background)
                            {
                                <li>@background.DisplayName()</li>
                            }
                        </ul>
                    </td>
                </tr>
            }
        </table>
    }

    void GetNatureNypeTablesMobile(List<AlienSpeciesAssessment2023SpeciesNaturetypeInteraction> impacts)
    {
        foreach (var impact in impacts)
        {
            <table class="big-data-table">
                <caption class="table-title">@Helpers.removeLineBreaksForMobile(@Localizer["affected_species_naturetype"].Value): @impact.Name</caption>
                <tr>
                    <td>@Helpers.removeLineBreaksForMobile(@Localizer["keystone_or_threatened"].Value)</td> /* påvirkes nøkkelarter eller truede arter? */
                    <td>@(impact.KeyStoneSpecie ? "ja" : "nei")</td>
                </tr>
                <tr>
                    <td>@Localizer["interaction_strength"]</td>
                    <td>@impact.InteractionStrength.DisplayName()</td>
                </tr>
                <tr>
                    <td>@Localizer["geographical_extent"]</td>
                    <td>@impact.Scale.DisplayName()</td>
                </tr>
                <tr>
                    <td>@Localizer["interaction_type"]</td>
                    <td>@impact.InteractionType.DisplayName()</td>
                </tr>
                @if (@impact.Background.Count() != 0)
                {
                    <tr>
                        <td>@Helpers.removeLineBreaksForMobile(@Localizer["documentation_type"].Value)</td>
                        <td>
                            <ul>
                                @foreach (var background in impact.Background)
                                {
                                    <li>@background.DisplayName()</li>
                                }
                            </ul>
                        </td>
                    </tr>
                }
            </table>
        }
    }

    void GetFGTable(bool shouldBeThreatened)
    {
        <table class="big-data-table">
             <caption class="table-title">
                @if (shouldBeThreatened)
                {
                    <b>@Localizer["alien_species_tables_F_criteria_table_title"]</b>
                }
                @if (!shouldBeThreatened)
                {
                    <b>@Localizer["alien_species_tables_G_criteria_table_title"]</b>
                } 
                @Localizer["alien_species_tables_F_G_criteria_table_description"]
             </caption>
            <tr>
                <th>@LocalizerShared["ecosystem"]</th>
                <th>@Localizer["time_horizon"]</th>
                <th>@LocalizerHtml["state_change"]</th>
                <th>@LocalizerHtml["affected_area"]</th>
                <th>@LocalizerHtml["documentation_type"]</th>
            </tr>
            @foreach (var natureType in assessment.ImpactedNatureTypes.Where(x => x.IsThreatened == shouldBeThreatened && HasAffectedArea(x.AffectedArea)))
            {
                <tr>
                    <td>@natureType.Name</td>
                    <td>@natureType.TimeHorizon.DisplayName()</td>
                    <td>
                        @if (natureType.StateChange != null)
                        {
                            <ul>
                                @foreach (var stateChange in natureType.StateChange)
                                {
                                    <li>
                                        @stateChange.DisplayName()
                                    </li>
                                }
                            </ul>
                        }
                    </td>
                    <td>@natureType.AffectedArea</td>
                    <td>
                    @{
                            <ul>
                                @foreach (var background in natureType.Background)
                                {
                                    <li>
                                        @background.DisplayName()
                                    </li>
                                }
                            </ul>
                    }
                    </td>
                </tr>
            }
        </table>
    }

    void GetListForCategory(AlienSpeciesAssessment2023Criterion criterion, string letter)
    {
        <div class="collapsible_header">
            <span>
                <b><span class="collapsible_header_letter">@letter.</span></b> @criterion.CriteriaLetter.DisplayName() 
                <span> @AlienSpeciesHelpers.GetLetterFullText(criterion, false)  @Localizer["corresponds_to"] @LocalizerShared["score"] @criterion.Value.</span> 
            </span> 
            <button onclick="toggleCollapsible(this)" class="adb-button ghost">
                <span class="expanded_icon">
                    <span>Se mindre</span>
                    <span class="material-icons">expand_less</span>
                </span>
                <span class="collapsed_icon">
                    <span>Se mer</span>
                    <span class="material-icons">expand_more</span>
                </span>
            </button>
        </div>
    }

    void GetEstimationMethod(string estimationMethod)
    {
        <span class="estimation-method">
            @Constants.estimationMethod 
            <span>@estimationMethod</span>
        </span>
    }
}

<div is-visible="showIsNk && isDecisiveCriteria">
    @Helpers.FixSpeciesLevelWithTranslation("{Arten}", assessment.ScientificName.ScientificNameRank, assessment.ScientificName.ScientificName) @Localizer["assessed_to"] <i>@AlienSpeciesAssessment2023Category.NK.DisplayName().ToLower()</i> @Localizer["NK_no_decisive"]
</div>

<div is-visible="!showIsNk || !isDecisiveCriteria">

    <h3>@LocalizerShared["invasion_potential"]</h3>
    <p is-visible="isDecisiveCriteria">
        <b>
            @Helpers.FixSpeciesLevelWithTranslation("{Arten}", assessment.ScientificName.ScientificNameRank, assessment.ScientificName.ScientificName) @LocalizerShared["has"] @assessment.ScoreInvasionPotential.DisplayName().ToLowerInvariant()
            @LocalizerShared["invasion_potential"].Value.ToLower() (@LocalizerShared["score"] @((int)assessment.ScoreInvasionPotential))
        </b>
    </p>

    <b is-visible="isDecisiveCriteria">@LocalizerShared["decisive_criteria_short"]</b>
    <b is-visible="!isDecisiveCriteria">@LocalizerShared["non_decisive_criteria"]</b>
    <p is-visible="showLowInvasionPotential && isDecisiveCriteria">
         @Constants.noDecisiveCriteriaXAxis
        <span>@Constants.seeOtherTab</span>
    </p>
    <ul class="criteria-summary-list">
        <li is-visible="criteriaHasA || criteriaHasB"  class="collapsible initially_closed">
            @{
                GetListForCategory(uncertaintyA, AlienSpeciesAssessment2023CriteriaLetter.A.ToString());
            }
            <div class="collapsible_content">                
                @{GetEstimationMethod(assessment.MedianLifetimeEstimationMethod.DisplayName().ToLowerInvariant());}                
                <p class="summary-estimated">
                    <span is-visible="showSimplifiedEstimateAcceptedAlien || showSimplifiedEstimateNotAcceptedAlien">
                        @Constants.basedOnEstimatesPlural @Constants.basedOnArea @Constants.today
                        (@assessment.AOOtotalBest?.ToString("N0") km²) @Constants.andIn50 
                        (@assessment.AOOfutureBest.ToString("N0") km²)     
                    </span>
                    
                    <span is-visible="showSimplifiedEstimateAcceptedDoorKnockerOrEffectWithoutReproduction || showSimplifiedEstimateNotAcceptedDoorKnockerOrEffectWithoutReproduction">
                        @Constants.basedOnEstimatesSingular
                        @assessment.Occurrences1Best?.ToString("N0")
                        @Constants.basedOnArea10years @Constants.and
                        @assessment.IntroductionsBest?.ToString("N0")
                        @Constants.moreIntroductions                       
                    </span>

                    <span is-visible="showSimplifiedEstimateNotAcceptedAlien || showSimplifiedEstimateNotAcceptedDoorKnockerOrEffectWithoutReproduction">
                        @Constants.aCriteriaPreScoredAs 
                        @assessment.MedianLifetimeSimplifiedEstimationDefaultScore.ToString("N0")
                        (@Constants.withUuncertainty
                        @assessment.MedianLifetimeSimplifiedEstimationDefaultScoreLow.ToString("N0")
                        – 
                        @assessment.MedianLifetimeSimplifiedEstimationDefaultScoreHigh.ToString("N0")). 
                        @Constants.adjustedTo @uncertaintyA.Value @Constants.and 
                    </span>

                    <span is-visible="showSimplifiedEstimateAcceptedAlien || showSimplifiedEstimateAcceptedDoorKnockerOrEffectWithoutReproduction">
                        @Constants.aCriteriaScoredAs @uncertaintyA.Value (@Constants.withUuncertainty: 
                    </span>
                    
                    <span class="uncertainty-range" is-visible="showSimplifiedEstimateAcceptedAlien || showSimplifiedEstimateNotAcceptedAlien || showSimplifiedEstimateNotAcceptedDoorKnockerOrEffectWithoutReproduction || showSimplifiedEstimateAcceptedDoorKnockerOrEffectWithoutReproduction">
                        @AlienSpeciesHelpers.GetUncertaintyValueMinMax(uncertaintyA.Value, AlienSpeciesHelpers.GetUncertaintyLow(uncertaintyA))
                        – 
                        @AlienSpeciesHelpers.GetUncertaintyValueMinMax(uncertaintyA.Value, AlienSpeciesHelpers.GetUncertaintyHigh(uncertaintyA))). 
                    </span>

                    <span class="lifeSpan" is-visible="showSimplifiedEstimateAcceptedAlien || showSimplifiedEstimateNotAcceptedAlien || showSimplifiedEstimateNotAcceptedDoorKnockerOrEffectWithoutReproduction || showSimplifiedEstimateAcceptedDoorKnockerOrEffectWithoutReproduction">
                        @Constants.medianLifeSpan
                        @AlienSpeciesHelpers.CriteriaDescription(uncertaintyA.CriteriaLetter, uncertaintyA.Value)                    
                        @Constants.riskOfDeath50
                        @assessment.ExtinctionProbability.DisplayName().
                    </span>
                </p>
                <p class="adjusted-explanation" is-visible="showSimplifiedEstimateNotAcceptedAlien || showSimplifiedEstimateNotAcceptedDoorKnockerOrEffectWithoutReproduction">
                    @Constants.adjustedUncertainty
                    @assessment.MedianLifetimeSimplifiedEstimationAdjustScoreReason
                </p>                                
                <div is-visible="showNumericalEstimation">
                    <table class="big-data-table" is-visible="showNumericalEstimation">
                        <caption class="table-title">
                            <b>@Constants.AlienSpeciesTables.CriteriaAMedianLifespanNumericalEstimationTableTitle</b>
                            @Constants.AlienSpeciesTables.CriteriaAMedianLifespanNumericalEstimationTableDescription<a href="https://www.artsdatabanken.no/Files/42948/" target="_blank">@Constants.AlienSpeciesTables.CriteriaANumericalEstimationTableLinkText</a>.
                        </caption>
                        <tr>
                            <th>@Constants.AlienSpeciesTables.MedianLifespanAndExpansionSpeedParameterColumn1</th>
                            <th>@Constants.AlienSpeciesTables.MedianLifespanAndExpansionSpeedParameterColumn2</th>
                        </tr>
                        <tr is-visible="assessment.MedianLifetimeNumericalEstimationPopulationSize != 0">
                            <td>@Constants.AlienSpeciesTables.CurrentPopSize </td>
                            <td>@assessment.MedianLifetimeNumericalEstimationPopulationSize.ToString("N0")</td>
                        </tr>
                        <tr is-visible="assessment.MedianLifetimeNumericalEstimationGrowthRate != 0">
                            <td>@Constants.AlienSpeciesTables.GrowthRate (&lambda;) </td>
                            <td>@assessment.MedianLifetimeNumericalEstimationGrowthRate.ToString("N0")</td>
                        </tr>
                        <tr is-visible="assessment.MedianLifetimeNumericalEstimationEnvironmentalVariance != null">
                            <td>@Constants.AlienSpeciesTables.EnvironmentVar (&sigma;<sub>e</sub><sup>2</sup>) </td>
                            <td>@assessment.MedianLifetimeNumericalEstimationEnvironmentalVariance?.ToString("N0")</td>
                        </tr>
                        <tr is-visible="assessment.MedianLifetimeNumericalEstimationDemographicVariance != null">
                            <td>@Constants.AlienSpeciesTables.DemographicVar (&sigma;<sub>d</sub><sup>2</sup>) </td>
                            <td>@assessment.MedianLifetimeNumericalEstimationDemographicVariance?.ToString("N0")</td>
                        </tr>
                        <tr is-visible="assessment.MedianLifetimeNumericalEstimationCarryingCapacity != null">
                            <td>@Constants.AlienSpeciesTables.CarryingCapasity</td>
                            <td>@assessment.MedianLifetimeNumericalEstimationCarryingCapacity?.ToString("N0")</td>
                        </tr>
                        <tr is-visible="assessment.MedianLifetimeNumericalEstimationExtinctionThreshold != null">
                            <td>@Constants.AlienSpeciesTables.QuasiExtinctionThreshold</td>
                            <td>@assessment.MedianLifetimeNumericalEstimationExtinctionThreshold?.ToString("N0")</td>
                        </tr>
                    </table>
                    <p is-visible="assessment.MedianLifetimeBestEstimate != 0">
                        @Constants.medianLifeEst
                        @assessment.MedianLifetimeBestEstimate.ToString("N0") @Constants.years.
                    </p>
                </div>
                <div is-visible="showViableAnalysis">
                    <p>@Constants.modelAndProgram @assessment.MedianLifetimeViabilityAnalysisDescription</p>
                    <table class="big-data-table">
                        <caption class="table-title">@Constants.AlienSpeciesTables.CriteriaAMedianLifespanNumericalEstimationTableTitle</caption>
                        <tr is-visible="assessment.MedianLifetimeBestEstimate != 0">
                            <td>@Constants.estMedianLifeSpanThisYear: </td>
                            <td>@assessment.MedianLifetimeBestEstimate.ToString("N0")</td>
                        </tr>
                        <tr is-visible="assessment.MedianLifetimeLowEstimate != 0">
                            <td>@Constants.estMedianLifeSpanThisYear @Constants.lowEstimate: </td>
                            <td>@assessment.MedianLifetimeLowEstimate.ToString("N0")</td>
                        </tr>
                        <tr is-visible="assessment.MedianLifetimeHighEstimate != 0">
                            <td>@Constants.estMedianLifeSpanThisYear @Constants.highEstimate: </td>
                            <td>@assessment.MedianLifetimeHighEstimate.ToString("N0")</td>
                        </tr>
                    </table>
                </div>
            </div>            
        </li>
        <li is-visible="criteriaHasA || criteriaHasB" class="collapsible initially_closed">            
            @{
                GetListForCategory(uncertaintyB, AlienSpeciesAssessment2023CriteriaLetter.B.ToString());
            }
            <div class="collapsible_content">
                @{GetEstimationMethod(assessment.ExpansionSpeedEstimationMethod.DisplayName().ToLowerInvariant());}
                <div is-visible="isSpatiotemporalDataset">
                    <br>
                    <table class="big-data-table">
                        <caption class="table-title">
                         <b>@Constants.AlienSpeciesTables.CriteriaBExpansionSpeedSpatioTemporalParameterTableTitle</b> 
                        @Constants.AlienSpeciesTables.CriteriaBExpansionSpeedSpatioTemporalParameterTableDescription <a href="https://view.nina.no/expansion/" target="_blank">@Constants.expansion</a>.
                        </caption>
                        <tr>
                            <th>@Constants.AlienSpeciesTables.MedianLifespanAndExpansionSpeedParameterColumn1</th>
                            <th>@Constants.AlienSpeciesTables.MedianLifespanAndExpansionSpeedParameterColumn2</th>
                        </tr>
                        <tr is-visible="!string.IsNullOrEmpty(assessment.ExpansionSpeedSpatioTemporalDatasetDarkFigureRange)">
                            <td>@Constants.AlienSpeciesTables.AreaDarkNumbers</td>
                            <td>@assessment.ExpansionSpeedSpatioTemporalDatasetDarkFigureRange</td>
                        </tr>
                        <tr is-visible="!string.IsNullOrEmpty(assessment.ExpansionSpeedSpatioTemporalDatasetModel.DisplayName())">
                            <td>@Constants.AlienSpeciesTables.Model</td>
                            <td>@assessment.ExpansionSpeedSpatioTemporalDatasetModel.DisplayName().ToLower()</td>
                        </tr>
                        <tr is-visible="!string.IsNullOrEmpty(assessment.ExpansionSpeedSpatioTemporalDatasetOccurrenceListing.DisplayName())">
                            <td>@Constants.AlienSpeciesTables.SitesListed</td>
                            <td>@assessment.ExpansionSpeedSpatioTemporalDatasetOccurrenceListing.DisplayName()</td>
                        </tr>
                    </table>
                    <br>
                    <table class="big-data-table">
                        <caption class="table-title">
                            <b>@Constants.AlienSpeciesTables.CriteriaBExpansionSpeedSpatioTemporalResultTableTitle</b>
                            @Constants.AlienSpeciesTables.CriteriaBExpansionSpeedSpatioTemporalResultTableDescription
                        </caption>
                        <tr>
                            <th>@Constants.AlienSpeciesTables.ExpansionSpeedResultColumn1</th>
                            <th>@Constants.AlienSpeciesTables.ExpansionSpeedResultColumn2</th>
                        </tr>
                        <tr>
                            <td>@Constants.AlienSpeciesTables.AverageRow </td>
                            <td>@assessment.ExpansionSpeedBestEstimate.ToString("N0")</td>
                        </tr>
                        <tr>
                            <td>@Constants.AlienSpeciesTables.LowRow </td>
                            <td>@assessment.ExpansionSpeedLowEstimate.ToString("N0")</td>
                        </tr>
                        <tr>
                            <td>@Constants.AlienSpeciesTables.HighRow </td>
                            <td>@assessment.ExpansionSpeedHighEstimate.ToString("N0")</td>
                        </tr>
                    </table>
                </div>
                <div is-visible="isEstimatedIncreaseInAOOReproducingUnaided">
                    <br>
                    <table class="big-data-table">
                        <caption class="table-title">
                            <b>@Constants.AlienSpeciesTables.CriteriaBExpansionSpeedIncreaseAOOTableTitle</b>
                            @Constants.AlienSpeciesTables.CriteriaBExpansionSpeedIncreaseAOOTableDescription
                        </caption>
                        <tr>
                            <th>@Constants.AlienSpeciesTables.ExpansionSpeedAOOColumn1</th>
                            <th>@Html.Raw(@Constants.AlienSpeciesTables.ExpansionSpeedAOOKnownArea)</th>
                            <th>@Html.Raw(@Constants.AlienSpeciesTables.ExpansionSpeedAOOKnownAreaCorrected)</th>
                        </tr>
                        <tr>
                            <td><b class="only_mobile"> @Constants.AlienSpeciesTables.ExpansionSpeedAOOColumn1: </b> @assessment.ExpansionSpeedEstimatedIncreaseInAOOFirstYear</td>
                            <td><b class="only_mobile"> @Html.Raw(@Constants.AlienSpeciesTables.ExpansionSpeedAOOKnownArea): </b> @assessment.ExpansionSpeedEstimatedIncreaseInAOOFirstAOO.ToString("N0")</td>
                            <td><b class="only_mobile"> @Html.Raw(@Constants.AlienSpeciesTables.ExpansionSpeedAOOKnownAreaCorrected): </b> @assessment.ExpansionSpeedEstimatedIncreaseInAOOFirstAOOCorr.ToString("N0")</td>
                        </tr>
                        <tr>
                            <td><b class="only_mobile"> @Constants.AlienSpeciesTables.ExpansionSpeedAOOColumn1: </b> @assessment.ExpansionSpeedEstimatedIncreaseInAOOLastYear</td>
                            <td><b class="only_mobile"> @Html.Raw(@Constants.AlienSpeciesTables.ExpansionSpeedAOOKnownArea): </b> @assessment.ExpansionSpeedEstimatedIncreaseInAOOLastAOO.ToString("N0")</td>
                            <td><b class="only_mobile"> @Html.Raw(@Constants.AlienSpeciesTables.ExpansionSpeedAOOKnownAreaCorrected): </b>@assessment.ExpansionSpeedEstimatedIncreaseInAOOLastAOOCorr.ToString("N0")</td>
                        </tr>
                    </table>
                    <p is-visible="!string.IsNullOrEmpty(assessment.ExpansionSpeedEstimatedIncreaseInAOODescription)">
                        @Constants.commentData @assessment.ExpansionSpeedEstimatedIncreaseInAOODescription
                    </p>
                    <p>
                        @Constants.basedOnIncrease @assessment.ExpansionSpeedEstimatedIncreaseInAOOFirstYear @Constants.to 
                        @assessment.ExpansionSpeedEstimatedIncreaseInAOOLastYear
                        @Constants.andA @Constants.darkNumber @((assessment.AOOtotalBest / assessment.AOOknown)?.ToString("N0"))
                        @Constants.expansionSpeedEst @assessment.ExpansionSpeedBestEstimate.ToString("N0") @Constants.mPerYear. 
                        @Constants.withUuncertainty @assessment.ExpansionSpeedLowEstimate.ToString("N0") @Constants.mPerYear 
                        (@Constants.darkNumber @((assessment.AOOtotalLow / assessment.AOOknown)?.ToString("N0"))) – 
                        @assessment.ExpansionSpeedHighEstimate.ToString("N0") @Constants.mPerYear 
                        (@Constants.darkNumber @((assessment.AOOtotalHigh / assessment.AOOknown)?.ToString("N0"))).
                    </p>
                </div>
                <div is-visible="isEstimatedIncreaseInAOOReproducingUnaidedFutureExpansion">
                    <p>@Constants.methodDescriptionUnaidedFuture</p>
                    <p>
                        @Constants.basedOnEstimatesSingular @Constants.basedOnAreaSingular @Constants.today 
                        (@assessment.AOOtotalBest?.ToString("N0") km<sup>2</sup>) @Constants.andIn50
                        (@assessment.AOOfutureBest.ToString("N0") km<sup>2</sup>)  @Constants.expansionSpeedIs
                        @assessment.ExpansionSpeedBestEstimate.ToString("N0") @Constants.mPerYear. 
                        @Localizer["corresponds_to"] @LocalizerShared["score"] @uncertaintyB.Value @Constants.atBCrit.
                    </p>
                </div>
                <p is-visible="isEstimatedIncreaseInAOODoorKnockers">                   
                    @Constants.basedOnEstimatesSingular  @assessment.Occurrences1Best?.ToString("N0") 
                    @Constants.basedOnArea10years @Constants.and @assessment.IntroductionsBest?.ToString("N0") 
                    @Constants.moreIntroductions @Constants.bCriteriaScoredAs @uncertaintyB.Value (@Constants.withUuncertainty
                    @AlienSpeciesHelpers.GetUncertaintyValueMinMax(uncertaintyB.Value, AlienSpeciesHelpers.GetUncertaintyLow(uncertaintyB))
                    – 
                    @AlienSpeciesHelpers.GetUncertaintyValueMinMax(uncertaintyB.Value, AlienSpeciesHelpers.GetUncertaintyHigh(uncertaintyB))). 
                    @Constants.expansionSpeedGuess @assessment.ExpansionSpeedBestEstimate.ToString("N0") @Constants.mPerYear.                   
                </p>
            </div>            
        </li>
        <li is-visible="criteriaHasC">
            <div is-visible="hasContentC" class="collapsible initially_closed">
                @{
                    GetListForCategory(uncertaintyC, AlienSpeciesAssessment2023CriteriaLetter.C.ToString());
                }
                <div class="collapsible_content">
                    <table class="big-data-table">
                        <caption class="table-title">
                            <b>@Constants.AlienSpeciesTables.CriteriaCNaturetypesTableTitle</b>
                            @Constants.AlienSpeciesTables.CriteriaCNaturetypesTableDescription
                        </caption>
                        <tr>
                            <th>@Constants.AlienSpeciesTables.NaturetypeNameTableColumn</th>
                            <th>@Localizer["time_horizon"]</th>
                            <th>@Html.Raw(@Constants.AlienSpeciesTables.ColonizedAreaTableColumn)</th>
                            <th>@LocalizerHtml["documentation_type"]</th>
                        </tr>
                        @foreach (var natureType in assessment.ImpactedNatureTypes)
                        {
                            <tr>
                                <td><b class="only_mobile"> @Constants.AlienSpeciesTables.NaturetypeNameTableColumn:</b>@natureType.Name</td>
                                <td><b class="only_mobile"> @Localizer["time_horizon"]:</b>@natureType.TimeHorizon.DisplayName()</td>
                                <td><b class="only_mobile"> @Helpers.removeLineBreaksForMobile(@Constants.AlienSpeciesTables.ColonizedAreaTableColumn):</b>@natureType.ColonizedArea</td>
                                <td>
                                    <b class="only_mobile"> @Helpers.removeLineBreaksForMobile(@Localizer["documentation_type"]):</b>
                                    <ul>
                                        @foreach (var background in natureType.Background)
                                        {
                                        <li>@background.DisplayName()</li>
                                        }
                                    </ul>
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </li>
        <li is-visible="!isDecisiveCriteria">
            <p is-visible="UnusedCriteriaInvationPotential().Length > 0">
                Invasjonspotensial etter @UnusedCriteriaInvationPotential() er vurdert som fraværende (usannsynlig).
            </p>
        </li>
    </ul>

    <h3>@LocalizerShared["ecological_effect"]</h3>

    <p is-visible="isDecisiveCriteria">
        <b>
            @Helpers.FixSpeciesLevelWithTranslation("{Arten}", assessment.ScientificName.ScientificNameRank, assessment.ScientificName.ScientificName) @LocalizerShared["has"] @assessment.ScoreEcologicalEffect.DisplayName().ToLowerInvariant()
            @LocalizerShared["ecological_effect"].Value.ToLower() (@LocalizerShared["score"] @((int)assessment.ScoreEcologicalEffect))
        </b>
    </p>

    <b is-visible="isDecisiveCriteria">@LocalizerShared["decisive_criteria_short"]</b>
    <b is-visible="!isDecisiveCriteria">@LocalizerShared["non_decisive_criteria"]</b>
    <p is-visible="showNoEcologicalEffect">
        <p>@Constants.noEcoEffect</p>
    </p>
    <ul class="criteria-summary-list">
        <li is-visible="criteriaHasD && !showIsNk && hasContentD" class="collapsible initially_closed">           
            @{
                GetListForCategory(uncertaintyD, AlienSpeciesAssessment2023CriteriaLetter.D.ToString());
            }
            <div class="collapsible_content">
                <div is-visible="@(assessment.SpeciesSpeciesInteractionsThreatenedSpecies != null && assessment.SpeciesSpeciesInteractionsThreatenedSpecies.Count() != 0)">
                    <div class="mobile_hide">
                        @{
                            GetSpeciesTableDesktop(assessment.SpeciesSpeciesInteractionsThreatenedSpecies, true);
                        }
                    </div>
                    <div class="only_mobile">
                        @{
                            GetSpeciesTablesMobile(assessment.SpeciesSpeciesInteractionsThreatenedSpecies);
                        }
                    </div>
                </div>
                <div is-visible="@(assessment.SpeciesNaturetypeInteractionsThreatenedSpecies != null && assessment.SpeciesNaturetypeInteractionsThreatenedSpecies.Count() != 0)">
                    <div class="mobile_hide">
                        @{
                            GetNatureTypeTableDesktop(assessment.SpeciesNaturetypeInteractionsThreatenedSpecies, true);
                        }
                    </div>
                    <div class="only_mobile">
                        @{
                            GetNatureNypeTablesMobile(assessment.SpeciesNaturetypeInteractionsThreatenedSpecies);
                        }
                    </div>
                </div>
                <div is-visible="@(!string.IsNullOrEmpty(assessment.EffectsOnSpeciesSupplementaryInformation))">
                    <p>Utfyllende informasjon rundt artens negative effekter:</p>
                    <p>@Html.Raw(assessment.EffectsOnSpeciesSupplementaryInformation)</p>
                </div>
                <div is-visible="@(!string.IsNullOrEmpty(assessment.EffectsOnThreathenedSpeciesUncertaintyDocumentation) && HasUncertainty(uncertaintyD))">
                    <p>
                        Det er knyttet usikkerhet rundt artens effekter som går utover utfallsrommet til den mest sannsynlige skåren på @uncertaintyD.Value.
                        Dette begrunnes i:
                    </p>
                    <p>@Html.Raw(assessment.EffectsOnThreathenedSpeciesUncertaintyDocumentation)</p>
                </div>                
            </div>
        </li>

        <li is-visible="criteriaHasE && !showIsNk && hasContentE" class="collapsible initially_closed">           
            @{
                GetListForCategory(uncertaintyE, AlienSpeciesAssessment2023CriteriaLetter.E.ToString());
            }
            <div class="collapsible_content">
                <div is-visible="@(assessment.SpeciesSpeciesInteractions  != null && assessment.SpeciesSpeciesInteractions .Count() != 0)">
                    <div class="mobile_hide">
                        @{
                            GetSpeciesTableDesktop(assessment.SpeciesSpeciesInteractions, false);
                        }
                    </div>
                    <div class="only_mobile">
                        @{
                            GetSpeciesTablesMobile(assessment.SpeciesSpeciesInteractions);
                        }
                    </div>
                </div>
                <div is-visible="@(assessment.SpeciesNaturetypeInteractions != null && assessment.SpeciesNaturetypeInteractions.Count() != 0)">
                    <div class="mobile_hide">
                        @{
                            GetNatureTypeTableDesktop(assessment.SpeciesNaturetypeInteractions, false);
                        }
                    </div>
                    <div class="only_mobile">
                        @{
                            GetNatureNypeTablesMobile(assessment.SpeciesNaturetypeInteractions);
                        }
                    </div>
                </div>
                <div is-visible="@(!string.IsNullOrEmpty(assessment.EffectsOnSpeciesSupplementaryInformation))">
                    <p>Utfyllende informasjon rundt artens negative effekter:</p>
                    <p>@Html.Raw(assessment.EffectsOnSpeciesSupplementaryInformation)</p>
                </div>
                <div is-visible="@(!string.IsNullOrEmpty(assessment.EffectsOnOtherNativeSpeciesUncertaintyDocumentation) && HasUncertainty(uncertaintyE))">
                    <p>
                        Det er knyttet usikkerhet rundt artens effekter som går utover utfallsrommet til den mest sannsynlige skåren på @uncertaintyE.Value.
                        Dette begrunnes i:
                    </p>
                    <p>@Html.Raw(assessment.EffectsOnOtherNativeSpeciesUncertaintyDocumentation)</p>
                </div>               
            </div>
        </li>

        <li is-visible="criteriaHasF && !showIsNk && hasContentF" class="collapsible initially_closed">           
            @{
                GetListForCategory(uncertaintyF, AlienSpeciesAssessment2023CriteriaLetter.F.ToString());
            }
            <div class="collapsible_content">
                <div is-visible="showFTable">
                    @{
                        GetFGTable(true);
                    }
                </div>
                <p is-visible="!string.IsNullOrEmpty(assessment.ThreatenedNatureTypesAffectedDomesticDescription)">
                    Utfyllende informasjon rundt artens negative effekter: @Html.Raw(assessment.ThreatenedNatureTypesAffectedDomesticDescription)
                </p>
            </div>            
        </li>

        <li is-visible="criteriaHasG">
            <div is-visible="!showIsNk && hasContentG" class="collapsible initially_closed">
                @{
                    GetListForCategory(uncertaintyG, AlienSpeciesAssessment2023CriteriaLetter.G.ToString());
                }
                <div class="collapsible_content">
                    <div is-visible="showGTable">
                        @{
                            GetFGTable(false);
                        }
                    </div>
                    <p is-visible="!string.IsNullOrEmpty(assessment.CommonNatureTypesAffectedDomesticDescription)">
                        Utfyllende informasjon rundt artens negative effekter: @Html.Raw(assessment.CommonNatureTypesAffectedDomesticDescription)
                    </p>
                </div>
            </div>
        </li>

        <li is-visible="criteriaHasH">
            <div is-visible="!showIsNk && hasContentH" class="collapsible initially_closed">
                @{
                    GetListForCategory(uncertaintyH, AlienSpeciesAssessment2023CriteriaLetter.H.ToString());
                }
                <div class="collapsible_content">
                    <div>
                        <table class="big-data-table" is-visible="showHTable">
                            <caption class="table-title">
                                <b>@Constants.AlienSpeciesTables.CriteriaHIntrogressionTableTitle</b>
                                @Constants.AlienSpeciesTables.CriteriaHIntrogressionTableDescription 
                            </caption>
                            <tr>
                                <th>@Localizer["native_species"]</th>
                                <th>@LocalizerHtml["red_list_category_2021_html"]</th>
                                <th>@Localizer["keystone_species"]</th>
                                <th>Geografisk omfang</th>
                                <th>Vurderingsgrunnlag</th>
                            </tr>
                            @foreach (var contaminant in assessment.GeneticContamination)
                            {
                                <tr>
                                    <td>@contaminant.VernacularName <br> @Html.Raw(Helpers.FormatScientificNameElement(contaminant.ScientificName)) @contaminant.ScientificNameAuthor</td>
                                    <td><i>@contaminant.RedListCategory.DisplayName()</i> @contaminant.RedListCategory</td>
                                    <td>@( contaminant.KeyStoneSpecie == true ? "ja" : "nei" )</td>
                                    <td>@contaminant.Scale.DisplayName()</td>
                                    <td>
                                        <ul>
                                            @foreach(var field in contaminant.Background)
                                            {
                                                <li>
                                                    @field.DisplayName()
                                                </li>
                                            }
                                        </ul>
                                    </td>
                                </tr>
                            }
                        </table>
                        <div is-visible="showGeneticContaminationUncertaintyDocumentation">
                            <p>
                                Det er knyttet usikkerhet rundt artens effekter som går utover utfallsrommet til den mest sannsynlige skåren på @uncertaintyH.Value.
                                Dette begrunnes i:
                            </p>
                            <p>@Html.Raw(assessment.GeneticContaminationUncertaintyDocumentation)</p>
                        </div>
                    </div>
                </div>
            </div>
        </li>

        <li is-visible="criteriaHasI">
            <div is-visible="!showIsNk && hasContentI" class="collapsible initially_closed">
                @{
                    GetListForCategory(uncertaintyI, AlienSpeciesAssessment2023CriteriaLetter.I.ToString());
                }
                <div class="collapsible_content">
                    <div>
                        <table class="big-data-table" is-visible="showITable">
                            <caption class="table-title">
                                <b>@Constants.AlienSpeciesTables.CriteriaIParasitesTableTitle</b>
                                @Constants.AlienSpeciesTables.CriteriaIParasitesTableDescription 
                            </caption>
                            <tr>
                                <th>@Localizer["native_species"]</th>
                                <th>@LocalizerHtml["red_list_category_2021_html"]</th>
                                <th>@Localizer["keystone_species"]</th>
                                <th>Parasittens vitenskapelige navn</th>
                                <th>Parasittens status</th>
                                <th>Parasittens delkategori</th>
                                <th>Geografisk omfang</th>
                                <th>Vurderingsgrunnlag</th>
                            </tr>
                            @foreach (var transmission in assessment.ParasitePathogenTransmission)
                            {
                                <tr>
                                    <td>@transmission.VernacularName <br> @Html.Raw(Helpers.FormatScientificNameElement(transmission.ScientificName)) @transmission.ScientificNameAuthor</td>
                                    <td><i>@transmission.RedListCategory.DisplayName()</i> @transmission.RedListCategory</td>
                                    <td>@(transmission.KeyStoneSpecie == true ? "ja" : "nei")</td>
                                    <td>@transmission.ParasiteScientificName</td>
                                    <td>@transmission.ParasiteStatus.DisplayName()</td>
                                    <td>@transmission.ParasiteEcoEffect</td>
                                    <td>@transmission.Scale.DisplayName()</td>
                                    <td>
                                        <ul>
                                            @foreach (var field in transmission.Background)
                                            {
                                                <li>
                                                    @field.DisplayName()
                                                </li>
                                            }
                                        </ul>
                                    </td>
                                </tr>
                            }
                        </table>
                        <div is-visible="showParasitePathogenTransmissionUncertaintyDocumentation">
                            <p>
                                Det er knyttet usikkerhet rundt artens effekter som går utover utfallsrommet til den mest sannsynlige skåren på @uncertaintyI.Value.
                                Dette begrunnes i:
                            </p>
                            <p>@Html.Raw(assessment.ParasitePathogenTransmissionUncertaintyDocumentation)</p>
                        </div>
                    </div>
                </div>
            </div>
        </li>

        <li is-visible="!isDecisiveCriteria && UnusedCriteriaEcologicalEffect().Length > 0" class="collapsible initially_closed">
            <div class="collapsible_header">
                @Constants.effectAfterCriterium @UnusedCriteriaEcologicalEffect() 
                @Constants.evaluatedAsUnlikely
            </div>
        </li>
    </ul>
</div>
