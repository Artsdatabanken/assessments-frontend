@model FeedbackFormViewModel

@using Assessments.Data
@using Microsoft.EntityFrameworkCore

@inject AssessmentsDbContext DbContext

@{
    var feedbackMessage = TempData["feedback"] != null;
    var validationCode = Context.Request.Query["guid"];

    var emailIsValid = false;
    var validationCodeIsInvalid = false;

    if (!string.IsNullOrEmpty(validationCode))
    {
        var emailValidation = await DbContext.EmailValidations.AsNoTracking().FirstOrDefaultAsync(x => x.Guid == new Guid(validationCode));

        if (emailValidation != null)
        {
            emailIsValid = true;
            Model.FullName = emailValidation.FullName;
            Model.Email = emailValidation.Email;
        }
        else
        {
            validationCodeIsInvalid = true;
        }
    }
}

<h2 id="feedback">Tilbakemelding</h2>

@if (validationCodeIsInvalid)
{
    <p>Lenke for validering av e-post er ugyldig.</p>
}
else if (feedbackMessage)
{
    <p>@TempData["feedback"].ToString()</p>
}
else if (emailIsValid)
{
    <div class="page_section">
        <form asp-controller="Feedback" asp-action="AddFeedback" asp-route-returnurl="@(Context.Request.Path + "#feedback")" class="feedback_form" method="post" enctype="multipart/form-data" novalidate>

            <div class="feedback_form_input_field">
                <label asp-for="FullName"></label><br />
                <input asp-for="FullName" />
                <span asp-validation-for="FullName"></span>
            </div>

            <div class="feedback_form_input_field">
                <label asp-for="Email"></label><br />
                <input asp-for="Email" />
                <span asp-validation-for="Email"></span>
            </div>

            <div class="feedback_form_input_field">
                <label asp-for="Comment"></label><br />
                <textarea asp-for="Comment" rows="5"></textarea>
                <span asp-validation-for="Comment"></span>
            </div>

            <div class="feedback_form_input_field">
                <label asp-for="FormFiles"></label><br />
                <input asp-for="FormFiles" type="file" accept=".pdf, .doc, .docx" multiple>
                <span asp-validation-for="FormFiles"></span>
            </div>

            <input asp-for="AssessmentId" type="hidden" />
            <input asp-for="Year" type="hidden" />
            <input asp-for="ExpertGroup" type="hidden" />
            <input asp-for="Type" type="hidden" />

            <button class="primary" type="submit">Send inn skjema</button>

        </form>
    </div>
}
else
{
    <p>
        Registrer navn og e-postadresse for å få tilsendt en gyldig lenke for å sende tilbakemelding.
    </p>

    <div class="page_section">
        <form asp-controller="Feedback" asp-action="ValidateEmail" asp-route-returnurl="@(Context.Request.Path + "#feedback")" method="post" enctype="multipart/form-data" novalidate>

            <div class="feedback_form_input_field">
                <label asp-for="FullName"></label><br />
                <input asp-for="FullName" />
                <span asp-validation-for="FullName"></span>
            </div>

            <div class="feedback_form_input_field">
                <label asp-for="Email"></label><br />
                <input asp-for="Email" />
                <span asp-validation-for="Email"></span>
            </div>

            <button class="primary" type="submit">Registrer e-postadresse</button>

        </form>
    </div>
}

<script src="/js/aspnet-validation.min.js"></script>

<script>
    var validation = new aspnetValidation.ValidationService();
    validation.bootstrap();
</script>

<style>
    .input-validation-error {
        border: 1px solid red;
        outline-color: red;
    }
</style>
