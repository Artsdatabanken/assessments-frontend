@model RL2021ViewModel
@using static Assessments.Frontend.Web.Infrastructure.Constants
@using static Assessments.Frontend.Web.Infrastructure.Helpers
using System.Linq;

@{
    var AllAreas = ViewBag.AllAreas;
    Dictionary<string, Dictionary<string, string>> AllCategories = ViewBag.categories.ToObject<Dictionary<string, Dictionary<string, string>>>();
    var AllCriterias = ViewBag.AllCriterias;
    var AllEuroPop = ViewBag.AllEuroPop;
    var AllRegions = ViewBag.AllRegions;
    Dictionary<string, Dictionary<string, string>> AllHabitats = ViewBag.habitat.ToObject<Dictionary<string, Dictionary<string, string>>>();
    var AllTaxonRanks = ViewBag.AllTaxonRanks;
    string[] AllSpeciesGroups = ViewBag.AllSpeciesGroups;
    string[] AllInsects = ViewBag.AllInsects;
}

@functions{
    void InputTag(string id, string _class, string name, string[] elements, string value)
    {
        if (id == "remember_scroll")
        {
            foreach (var item in elements)
                if (item.Contains("scroll_"))
                    value = item.Replace("scroll_", "");
        }
        <input id=@id type="checkbox" class="@_class" name=@name value="@value" @(elements.Contains(value) ? " checked=checked" : String.Empty) />
    }
    void InputTag(string name, string[] elements, string value)
    {
        InputTag(value, "submitOnclick", name, elements, value);
    }
    void getInsectsList(string[] insects)
    {
        <div class="filter_insects">
            <ul class="insect_filters">
                @foreach (var insect in insects)
                {
                    <li class="checkbox">
                        <label for=@insect>
                            @{
                                InputTag(insect, "insect_input submitOnclick", "SpeciesGroups", Model.SpeciesGroups, insect);
                            }
                            <span class="label_text">@insect</span>
                        </label>
                    </li>
                }
            </ul>
        </div>
    }
    void makeCheckBoxLi(string key, string value, string name, string[] model)
    {
        <li class="checkbox">
            <label for=@key>
                @{ InputTag(name, model, key);}
                <span class="label_text">@value</span>
            </label>
        </li>
    }
    void makeFilterElement(string buttontext, string filtername, string action, string id, string buttonname, string numbername)
    {
        InputTag(action, "collapse_checkbox", "IsCheck", Model.IsCheck, filtername);
        <button name=@buttonname class="list_header" id=@id onclick="collapse('@action')" type="button">
            @buttontext
            <span class="filternumber">@Filter.GetActiveFilters(numbername, Model)</span>
        </button>
    }
    void makeFilterGroup(bool swap, string groupclassname, string name, dynamic modelname, dynamic looplist, string buttontext, string filtername, string action, string id, string buttonname, string numbername)
    {
        <li class="filter_group">
            @{makeFilterElement(buttontext, filtername, action, id, buttonname, numbername);}
            <div class=@groupclassname>
                <ul>
                    @foreach (var el in looplist)
                    {
                        var value = el.Value;
                        var key = el.Key;
                        if (swap) // Seriously. Why.
                        {
                            value = el.Key;
                            key = el.Value;
                        }
                        if (name == "Criterias")
                        {
                            key = el.Key + " - " + el.Value;
                        }
                        else if (name == "Habitats")
                        {
                            key = key["shortname"];
                        }
                        makeCheckBoxLi(value, key, name, modelname);
                    }
                </ul>
            </div>
        </li>
    }

    void makeSuperChips(bool swap, string name, dynamic modelname, dynamic looplist)
    {
        @foreach (var el in looplist)
        {
            dynamic value = el;
            dynamic key = el;

            if (name != "SpeciesGroups")
            {
                if (swap)
                {
                    value = el.Key;
                    key = el.Value;
                }
                else
                {
                    value = el.Value;
                    key = el.Key;
                }
            }
            string labelname = value;
            if (name == "Criterias")
            {
                key = el.Key + " - " + el.Value;
            }
            else if (name == "Habitats")
            {
                key = key["shortname"];
            }
            else if (name == "Category")
            {
                key = key["presentationstring"];
                labelname = "input_" + value;
            }

            @foreach (string element in modelname)
            {
                // Contains kept giving type errors despite fixing all visible issues.
                // Going oldschool.

                if (element == value)
                {
                    makeChips(key, "generic", labelname);
                }
            }
            
        }
    }


    void makeChips(string buttontext, string className,string value)
    {
    <div class="chips @className">
        <span>@buttontext</span>
        @if (value == "delete")
        {
            <button class="button tinybutton tertiary" name="remove_filters" value="true">
                <span class="material-icons">close</span>Fjern
            </button>
        }
        else
        {
            <button class="button tinybutton tertiary" type="submit" onclick="submitClickedElement('@value')">
                <span class="material-icons">close</span>Fjern
            </button>
        }

    </div>
    }
}

<!--- # of hits in search and their corresponding filter-chips -->
<div class="empty_filters">
    <p class="hit_count_text">
        <span class="antall">@FormatNumeric(Model.Redlist2021Results.TotalItemCount.ToString()) treff</span>
        <span>
            @if (Filter.GetActiveSelectionCount(Model) != 0
            || !string.IsNullOrEmpty(Filter.GetActiveSelection(Model)))
            {
                @if (!string.IsNullOrEmpty(Filter.GetActiveSelection(Model)))
                {
                    <span>for søket</span><span> &ldquo;@Filter.GetActiveSelection(Model)&rdquo;</span>
                    <button class="button tinybutton tertiary" name="remove_search" value="true">
                        <span class="material-icons">close</span>Fjern
                    </button><br />
                }
                @if (Filter.GetActiveSelectionCount(Model) > 0)
                {
                    var allFilterElements = Filter.GetActiveSelectionElement(Model);
                    makeSuperChips(false, "Area", allFilterElements, AllAreas);
                    makeSuperChips(true, "Category", Model.Category, AllCategories);
                    makeSuperChips(false, "SpeciesGroups", Model.SpeciesGroups, AllSpeciesGroups);
                    makeSuperChips(false, "SpeciesGroups", Model.SpeciesGroups, AllInsects);
                    makeSuperChips(true, "TaxonRank", Model.TaxonRank, AllTaxonRanks);
                    makeSuperChips(true, "Habitats", Model.Habitats, AllHabitats);
                    makeSuperChips(true, "Regions", Model.Regions, AllRegions);
                    makeSuperChips(true, "EuroPop", Model.EuroPop, AllEuroPop);
                    makeSuperChips(true, "Criterias", Model.Criterias, AllCriterias);

                    if (Model.PresumedExtinct)
                    {
                        //string[] PresumedExtinct = new string[] { "Antatt utdødd" };
                        //makeSuperChips(true, "PresumedExtinct", PresumedExtinct, PresumedExtinct);
                    }
                }

                string buttontext = @Filter.GetActiveSelectionCount(Model) + " filter";
                if (Filter.GetActiveSelectionCount(Model) >= 1)
                {
                    buttontext.Replace("filter", "filtre");
                    makeChips(buttontext, "delete", "delete");
                }
            }
        </span>
    </p>
</div>

<!-- CONTROL BUTTONS and toggles-->
<div class="controls">
    <div class="list_control_buttons">
        <button class="toggle_filter only_mobile list_actions" id="open_filter" value="open_filters" name="Åpne filter" type="button" onclick="openFilters()">
            @if (Filter.GetActiveSelectionCount(Model) != 0)
            {
                <span class="filternumber">@Filter.GetActiveSelectionCount(Model)</span>
            }
            <span class="material-icons">filter_list</span>Filter
        </button>

        @if (Model.View != "stat")
        {
            <select asp-for="SortBy" id="sort_results" class="sort_by list_actions" onchange="this.form.submit()">
                <option value="@nameof(SpeciesAssessment2021.ScientificName)">Artsnavn</option>
                <option value="@nameof(SpeciesAssessment2021.PopularName)">Populærnavn</option>
                <option value="@nameof(SpeciesAssessment2021.Category)">Kategori</option>
                <option value="@nameof(SpeciesAssessment2021.SpeciesGroup)">Artsgruppe</option>
            </select>
        }
    </div>
    <partial name="/Views/Redlist/Species/2021/List/partials/_ControlButtons.cshtml" />
</div>

<div class="listwrapper">
    <div class="filtercontainer">
        @{ InputTag("initial_check", "meta_checkbox", "Meta", Model.Meta, "Visited");}
        @{ InputTag("remember_scroll", "meta_checkbox", "Meta", Model.Meta, "0");}
        <!-- View controls -->
        <div id="filters">
            <div id="filter_modal_background">
                <div id="filters_scrollable" class="filter_background">
                    <div class="filter_groups">
                        <partial name="/Views/Redlist/Species/2021/List/partials/_FilterHeader.cshtml" />
                        <div class="filter_scroll_area">
                            <ul>
                                @{makeFilterGroup(false, "filter_area", "Area", Model.Area, AllAreas, @SearchAndFilter.SearchChooseArea, "Area", "show_area", "list_header_area", "områdefiltre", "Area");}

                                <li class="filter_group">
                                    @{makeFilterElement(@SearchAndFilter.SearchChooseCategory, "Category", "show_category", "list_header_category", "kategorifiltre", "Category");}
                                    <div class="filter_category">
                                        <ul>
                                            @foreach (var category in AllCategories)
                                            {
                                                <li class="checkbox" style="margin-top: 0;">
                                                    <label for="input_@category.Key">
                                                        @{
                                                            InputTag("input_" + category.Key, "submitOnclick", "Category", Model.Category, category.Key);
                                                        }
                                                        <span class="label_text">@category.Key - @category.Value["presentationstring"]</span>
                                                    </label>
                                                </li>
                                            }
                                            <!-- Todo: add some js onclick to remove cheched categories when removing all redlist etc -->
                                            <li class="checkbox">
                                                <label for="redlisted_check">
                                                    <input id="redlisted_check" type="checkbox" asp-for="Redlisted" class="submitOnclick" />
                                                    <span class="label_text">@SearchAndFilter.ChooseRedlisted</span>
                                                </label>
                                            </li>
                                            <li class="checkbox">
                                                <label for="endangered_check">
                                                    <input id="endangered_check" type="checkbox" asp-for="Endangered" class="submitOnclick" />
                                                    <span class="label_text">@SearchAndFilter.ChooseEndangered</span>
                                                </label>
                                            </li>
                                        </ul>
                                    </div>
                                </li>
                                @{makeFilterGroup(true, "filter_taxon_rank", "TaxonRank", Model.TaxonRank, AllTaxonRanks, @SearchAndFilter.SearchFilterTaxonRank, "TaxonRank", "show_taxon_rank", "list_header_taxon_rank", "'taksonomisk nivå'-filtre", "TaxonRank");}

                                <li class="filter_group">
                                    @{makeFilterElement("Artsgruppe", "SpeciesGroups", "show_species_groups", "list_header_species_groups", "artsgruppefiltre", "SpeciesGroups");}
                                    <div class="filter_species_groups">
                                        <ul>
                                            @foreach (var species in AllSpeciesGroups)
                                            {
                                                @if (species == "Insekter")
                                                {
                                                    InputTag("show_insects", "collapse_checkbox", "IsCheck", Model.IsCheck, "Insects");
                                                    <li class="checkbox">
                                                        <button name="insektsfiltre" class="list_header" id="list_header_insects" onclick="collapse('show_insects')" type="button">
                                                            <span>@species</span>
                                                            <span class="list_header_text">
                                                                <span class="filternumber">@Filter.GetActiveFilters("Insects", Model)</span>
                                                            </span>
                                                            <span id="show_all_insects">Marker alle</span>
                                                            <label onclick="event.stopPropagation()">
                                                                @{ InputTag("SpeciesGroups", Model.SpeciesGroups, species); }
                                                            </label>
                                                        </button>
                                                    </li>
                                                    getInsectsList(AllInsects);
                                                }
                                                else
                                                {
                                                    makeCheckBoxLi(@species, @species, "SpeciesGroups", Model.SpeciesGroups);
                                                }
                                            }
                                        </ul>
                                    </div>
                                </li>
                                @{
                                    makeFilterGroup(true, "filter_habitat", "Habitats", Model.Habitats, AllHabitats, "Hovedhabitat", "Habitat", "show_habitat", "list_header_habitat", "hovedhabitatfiltre", "Habitats");
                                    makeFilterGroup(true, "filter_region", "Regions", Model.Regions, AllRegions, "Regioner og havområder", "Region", "show_region", "list_header_region", "regionfiltre", "Regions");
                                    makeFilterGroup(true, "filter_european_population", "EuroPop", Model.EuroPop, AllEuroPop, "Andel av europeisk populasjon", "EuroPop", "show_european_population", "list_header_european_population", "'andel av europeisk populasjon'-filtre", "EuroPop");
                                    makeFilterGroup(true, "filter_criteria", "Criterias", Model.Criterias, AllCriterias, @SearchAndFilter.SearchChooseCriteria, "Criteria", "show_criteria", "list_header_criteria", "kriteriefiltre", "Criterias");
                                }

                                <li class="filter_group">
                                    @{ InputTag("show_extinct", "collapse_checkbox", "IsCheck", Model.IsCheck, "Extinct");}
                                    <button name="'trolig utdødd'-filter" class="list_header" id="list_header_extinct" onclick="collapse('show_extinct')" type="button">
                                        <span class="list_header_text">
                                            Trolig utdødd
                                            <span class="filternumber">@Filter.GetActiveFilters("PresumedExtinct", Model)</span>
                                        </span>
                                    </button>
                                    <div class="filter_extinct">
                                        <ul>
                                            <li class="checkbox">
                                                <label for="PresumedExtinct">
                                                    <input type="checkbox" class="submitOnclick" asp-for="PresumedExtinct" />
                                                    <span class="label_text">Trolig utdødd</span>
                                                </label>
                                            </li>
                                        </ul>
                                    </div>
                                </li>
                            </ul>
                        </div>
                        <partial name="/Views/Redlist/Species/2021/List/partials/_FilterMobileButtons.cshtml" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <partial name="/Views/Redlist/Species/2021/List/partials/_View.cshtml" />
</div>
