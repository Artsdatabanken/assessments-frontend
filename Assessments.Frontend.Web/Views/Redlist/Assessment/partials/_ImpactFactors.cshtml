@model SpeciesAssessment2021
@functions{

    // Snatched and shortened from 2018 nature red list,
    // Not yet ready for use.
    // https://github.com/Artsdatabanken/RodlisteNaturtyper2018visning/blob/2019update/Views/Home/Partials/impact-factors.cshtml

    string ImpactIcon(string id, string subtitle)
    {
        var number = id.Substring(0, 1);
        var biggernumber = id.Substring(0, 3);

        // 0. ingen trussel / no factor  has no image, as it is never displayed.
        if (number == "1")
        {
            // habitat icons are divided further
            number = biggernumber;
        }

        return "https://design.artsdatabanken.no/impact-icons/" + number + ".png";
    }

    string activeOrNot(string element)
    {
        @foreach (var factor in Model.ImpactFactors)
            {
                @if(factor.Id.StartsWith(element)){
                    return "active";
                }
            }

        return "inactive";
    }
}

@{ 
    Dictionary<string, Dictionary<string, object>> impactfactors_json = ViewBag.impactfactors.ToObject<Dictionary<string, Dictionary<string, object>>>();

}

<div class="page_section impact">
    <h2>Påvirkningsfaktor som vist i JSON -> TIl diskusjon om fremstilling. </h2>
    <p>
        Per nå er det som vises i denne lista slik at hvis et element er aktivt eller har et aktivt barn, åpnes lista på dette punktet.
        Ethvert inaktivt underpunkt lukkes.

    </p>

    <p>
        TODO:<br/>
        - Alltid vis ytterste lag<br/>
        - X + h2 slik som kriterier<br/>
        - ignorer ikon<br/>
        - knapp for å vis full liste<br/>
        - ikke tabell, hvis alt ukjent, skriv sammen til en streng. Hvis ikke, presenter det likevel som en p.


    
    </p>
    <ul class="outer" >
        @foreach (var (key, value) in impactfactors_json)
        {
            <li class="@activeOrNot(key)">

                @key @value["title"]<br />
                @if (value.ContainsKey("subelement"))
                {
                    <ul class="second">
                        @{
                            var first_layer = Newtonsoft.Json.Linq.JObject.Parse(value["subelement"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                        }
                        @foreach (var (first_k, first_v) in first_layer)
                        {
                        <li class="@activeOrNot(first_k)">
                            @first_k @first_v["title"]
                            @if (first_v.ContainsKey("subelement"))
                            {
                                <ul class="third">
                                    @{
                                        var second_layer = Newtonsoft.Json.Linq.JObject.Parse(first_v["subelement"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                                    }
                                    @foreach (var (second_k, second_v) in second_layer)
                                    {
                                    <li class="@activeOrNot(second_k)">
                                        @second_k @second_v["title"]
                                        @if (second_v.ContainsKey("subelement"))
                                        {
                                            <ul class="fourth">
                                                @{
                                                    var third_layer = Newtonsoft.Json.Linq.JObject.Parse(second_v["subelement"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                                                }
                                                @foreach (var (third_k, third_v) in third_layer)
                                                {
                                                <li  class="@activeOrNot(third_k)">
                                                    @third_k @third_v["title"]
                                                    @if (third_v.ContainsKey("subelement"))
                                                    {
                                                        <ul class="fifth">
                                                            @{
                                                                var fourth_layer = Newtonsoft.Json.Linq.JObject.Parse(third_v["subelement"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                                                            }
                                                            @foreach (var (fourth_k, fourth_v) in fourth_layer)
                                                            {
                                                                <li  class="@activeOrNot(fourth_k)">
                                                                    @fourth_k @fourth_v["title"]
                                                                </li>
                                                            }
                                                        </ul>
                                                    }
                                                </li>
                                                }
                                            </ul>
                                        }
                                    </li>
                                    }
                                </ul>
                            }
                        </li>
                        }
                    </ul>
                }
            </li>
        }
    </ul>
    
</div>


<div class="page_section">
    <h2>Påvirkningsfaktorer </h2>

    <p class="fact_box"> @ViewBag.glossary["oneliners"]["Påvirkningsfaktorer"]</p>

    <div class="factors">
        @{foreach (var factor in Model.ImpactFactors)
            {

                @factor.Id
                <div class="fake_table_header" style=" ":>


                    <div class="stats_element_container">
                        <img src="@ImpactIcon(@factor.Id,@factor.Factor)" class="paavirk" />
                    </div>



                    <div class="stats_element_text topalign">
                        <h3>@factor.GroupingFactor</h3>
                        <b>@factor.Id - @factor.Factor</b>
                        @* todo: se om stien skal brukes, inneholder også toppnivå - kan fjernes under ved å skrive factor.FactorPath.Skip(1)   *@
                        <h5> @string.Join(" > ", factor.FactorPath.Skip(1))</h5>


                    </div>
                </div>


                <div class="fake_table" style=" ">
                    <div>
                        <h3>Omfang</h3>

                        @{

                            var omfang_text = @factor.PopulationScope;
                            var omfang_numbers = "";

                            if (omfang_text.Contains("("))
                            {
                                // Split out the percentages etc. from the main string.
                                // Percentages appear to always be enclosed in "()".
                                omfang_text = omfang_text.Split("(")[0];
                                omfang_numbers = @factor.PopulationScope.Split("(")[1].Replace(")", "");
                            }

                        }
                        <span>@omfang_text</span><br />
                        @if (omfang_text.Contains("("))
                        {
                            <span class="stats_element">
                                <span>@omfang_numbers</span>
                            </span>
                        }


                    </div>
                    <div class="sideborders">
                        <h3>Alvorlighetsgrad</h3>

                        @{
                            var alv_text = @factor.Severity;                            
                        }
                        <span>@alv_text</span><br />

                    </div>
                    <div>
                        <h3>Tidspunkt</h3>
                        @factor.TimeScope
                    </div>
                </div>
            }
        }

    </div> <!-- end pavirkningsboks -->
</div> <!-- end factors -->
