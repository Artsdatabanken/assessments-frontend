@using Assessments.Mapping.AlienSpecies.Model.Enums
@model ExpertStatementViewModel

@{
    var showChangedAssessment = Model.AlienSpeciesCategory == Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciecAssessment2023AlienSpeciesCategory.NotAlienSpecie;
    var showChangedFromAlien = Model.ChangedFromAlien != Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciesAssessment2023ChangedFromAlien.Unknown;
    var showAlienStatusExplanation = !string.IsNullOrEmpty(Model.AlienStatusExplanation);
    var showChangedFromAlienDescription = !string.IsNullOrEmpty(Model.ChangedFromAlienDescription) && (!string.IsNullOrEmpty(Model.AlienStatusExplanation) && Model.AlienStatusExplanation != Model.ChangedFromAlienDescription || string.IsNullOrEmpty(Model.AlienStatusExplanation));
    var showConnectedToHigherLowerTaxonDescription = Model.AlienSpeciesCategory == Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciecAssessment2023AlienSpeciesCategory.TaxonEvaluatedAtAnotherLevel;
    var showUncertaintyEstablishmentTimeDescription = Model.AlienSpeciesCategory == Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciecAssessment2023AlienSpeciesCategory.UncertainBefore1800 || Model.AlienSpeciesCategory == Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciecAssessment2023AlienSpeciesCategory.RegionallyAlienEstablishedBefore1800;
    var showHorizonScanned = Model.AlienSpeciesCategory == AlienSpeciecAssessment2023AlienSpeciesCategory.HorizonScannedButNoRiskAssessment;
    var isMisidentified = Model.AlienSpeciesCategory == Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciecAssessment2023AlienSpeciesCategory.MisIdentified;
    var isAllBubTaxaAssessedSeparately = Model.AlienSpeciesCategory == Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciecAssessment2023AlienSpeciesCategory.AllSubTaxaAssessedSeparately;
    var isHybridWithoutOwnRiskAssessment = Model.AlienSpeciesCategory == Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciecAssessment2023AlienSpeciesCategory.HybridWithoutOwnRiskAssessment;
}

<div id="@nameof(Constants.HeadingsNo.AssesmentReasoning)">
    <h2>@Constants.HeadingsNo.AssesmentReasoning</h2>
    <div class="expert_Assessment">
        <div class="expert_text">
            <div is-visible="isMisidentified">@Html.Raw(Model.MisidentifiedDescription)</div>
            <div is-visible="isAllBubTaxaAssessedSeparately">@Html.Raw(Model.AllSubTaxaAssessedSeparately)</div>
            <div is-visible="isHybridWithoutOwnRiskAssessment">@Html.Raw(Model.HybridWithoutOwnRiskAssessmentDescription)</div>
            <p is-visible="@showAlienStatusExplanation">
                @Html.Raw(Model.AlienStatusExplanation) 
            </p>
            <div is-visible="@showChangedAssessment">
                <p is-visible="@showChangedFromAlien">
                    @Helpers.FixSpeciesLevelWithTranslation("{Arten}", Model.TaxonRank, Model.ScientificName) er @Html.Raw(Model.ChangedFromAlien.DisplayName()).
                </p>
                <p is-visible="showChangedFromAlienDescription">
                    @Html.Raw(Model.ChangedFromAlienDescription)
                </p>
            </div>
            <p is-visible="@showConnectedToHigherLowerTaxonDescription">
                @Html.Raw(Model.ConnectedToHigherLowerTaxonDescription)
            </p>
            <p is-visible="@showUncertaintyEstablishmentTimeDescription">
                @Html.Raw(Model.UncertaintyEstablishmentTimeDescription)
            </p>
            <div is-visible="showHorizonScanned">
                <partial name="/Views/AlienSpecies/2023/AssessmentPartials/_HorizonScanned.cshtml" />
            </div>
        </div>
    </div>
</div>
