@model AlienSpeciesDetailViewModel;
@using Assessments.Mapping.AlienSpecies.Model.Enums;

@{
    var pageName = @Constants.ImpactedNatureTypes;
    //var showPage = Constants.showHeading(pageName, @Model.Assessment.Category);
    var showPage = Model.Assessment.Category != AlienSpeciesAssessment2023Category.NR && Model.Assessment.AlienSpeciesCategory != AlienSpeciecAssessment2023AlienSpeciesCategory.TaxonEvaluatedAtAnotherLevel;
    var natureTypes = Model.Assessment.ImpactedNatureTypes;
    var isSvalbard = Model.Assessment.EvaluationContext == AlienSpeciesAssessment2023EvaluationContext.S;
}

<div is-visible="showPage" class="page_section">

    @functions{
        string removeLineBreaksForMobile(string text){
            return text.Replace("<br/>", "");
        }
    }
    <div id="show_category_changed" >
        <h2 id=@pageName>@Constants.HeadingsNO[@pageName]</h2>
       
        <p is-visible="isSvalbard">
            @Constants.ImpactedNatureTypesDescriptionSvalbard
        </p>
        <p is-visible="!isSvalbard">
            @Constants.ImpactedNatureTypesDescription
        </p>
        <p class="big-data-table table-description">
            <b>@Constants.ImpactedNatureTypesTableTitle</b>
            @Constants.ImpactedNatureTypesTableDescription
            
        <table class="big-data-table">
            <tr>
                <th>@Constants.ImpactedNatureTypesTableColumn1 </th>
                <th>@Constants.ImpactedNatureTypesTableColumn2</th>
                <th>@Html.Raw(Constants.ImpactedNatureTypesTableColumn3) </th>
                <th>@Html.Raw(Constants.ImpactedNatureTypesTableColumn4) </th>
                <th>@Html.Raw(Constants.ImpactedNatureTypesTableColumn5) </th>
                <th>@Constants.ImpactedNatureTypesTableColumn6 </th>
            </tr>
            @{
            foreach (var natureType in natureTypes)
            {
            <tr>
                <td><b class="only_mobile">@Constants.ImpactedNatureTypesTableColumn1:</b>@natureType.Name</td>
                <td><b class="only_mobile">@Constants.ImpactedNatureTypesTableColumn2:</b>@natureType.TimeHorizon.DisplayName()</td>
                <td><b class="only_mobile">@removeLineBreaksForMobile(Constants.ImpactedNatureTypesTableColumn3):</b>@natureType.ColonizedArea</td>
                <td><b class="only_mobile">@removeLineBreaksForMobile(Constants.ImpactedNatureTypesTableColumn4):</b>
                @{ 
                    if(natureType.StateChange != null)
                    { 
                        <ul>
                        @{
                            foreach (var state in natureType.StateChange)
                            {<li>@state.DisplayName()</li>}
                        }
                        </ul>
                    }
                }
                </td>
                <td><b class="only_mobile">@removeLineBreaksForMobile(Constants.ImpactedNatureTypesTableColumn5):</b>@natureType.AffectedArea</td>
                <td><b class="only_mobile">@Constants.ImpactedNatureTypesTableColumn6:</b>
                @{ 
                    if(natureType.Background != null)
                    { 
                        <ul>
                        @{
                            foreach (var bg in natureType.Background)
                            {<li>@bg.DisplayName()</li>}
                            }
                        </ul>
                    }
                }
                </td>
            </tr>
            }
            }
        </table>
    </div>
</div>

