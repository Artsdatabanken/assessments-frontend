@model AlienSpeciesDetailViewModel
@using Assessments.Mapping.AlienSpecies.Model.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Assessments.Data.Models
@using Assessments.Shared.Options
@using Microsoft.Extensions.Options

@inject IOptions<ApplicationOptions> Options

@{
    var enableCitation = Options.Value.AlienSpecies2023.EnableCitation;

    var assessment = Model.Assessment;
    ViewData["Title"] = assessment.ScientificName.ScientificName + " - Fremmedartslista 2023 innsyn"; // TODO: change after innsight process

    var speciesGroup = AlienSpeciesHelpers.GetSpeciesGroup(SpeciesGroups.AlienSpecies2023SpeciesGroups.Filters, assessment.SpeciesGroup);
    var speciesGroupImageUrl = speciesGroup?.ImageUrl;

    var assessmentPageHeaderViewModel = new AssessmentPageHeaderViewModel()
    {
        AssessmentArea = assessment.AlienSpeciesCategory == Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciecAssessment2023AlienSpeciesCategory.RegionallyAlien ? Constants.AlienSpecies2023PageMenuAssessmentAreaText : assessment.EvaluationContext.DisplayName(),
        ScientificNameViewModel = new ScientificNameViewModel()
        {
            PopularName = assessment.VernacularName,
            ScientificName = assessment.ScientificName.ScientificNameFormatted,
            ScientificNameFormatted = true,
            ScientificNameAuthor = assessment.ScientificName.ScientificNameAuthor
        },
        SpeciesGroupViewModel = new SpeciesGroupViewModel()
        {
            AssessmentYear = 2023, // TODO: create this field in assessment model
            ExpertCommittee = assessment.ExpertGroup,
            FirstPublishedDateString = "ikke publisert", // TODO: add date of publishing when we get this knowledge
            //RevisionDate = assessment.LastUpdatedAt, // TODO: check if this is revision date
            RevisionReason = "", // TODO: create a field for this, if we need revisions at all for alien species
            SpeciesGroup = assessment.SpeciesGroup,
            SpeciesGroupImageUrl = speciesGroupImageUrl,
            SpeciesGroupInfoUrl = "https://www.artsdatabanken.no/rodlisteforarter2021/ekspertkomiteene", // TODO: add correct link for alien species
            PreviousAssessmentYear = assessment.PreviousAssessments.Where(x => x.RevisionYear < 0).OrderByDescending(x => x.RevisionYear).Select(x => x.RevisionYear).FirstOrDefault()
        }
    };

    var citationViewModel = new CitationForAssessmentViewModel
    {
        AssessmentName = $"{assessment.SpeciesGroup}: Vurdering av {assessment.VernacularName} {assessment.ScientificName.ScientificNameFormatted} for {assessment.EvaluationContext.DisplayName()}",
        AssessmentYear = 2023, // TODO: add year when it comes into model
        ExpertCommittee = assessment.ExpertGroup,
        FirstPublished = Constants.RedlistSpecies2021FirstPublished,
        HasBackToTopLink = true,
        PublicationText = $"{Constants.AlienSpecies2023PageMenuHeaderText}.  {Constants.Artsdatabanken}.",
        RevisionDate = new DateTime(), // TODO: add if we handle revisions in this list
        RevisionReason = string.Empty, // TODO: add if we handle revisions in this list
        YearPreviousAssessment = assessment.PreviousAssessments?.Select(x => x.RevisionYear).OrderByDescending(x => x).FirstOrDefault() ?? 0,
        ExpertGroupMembers = Model.ExpertGroupMembers.Select(x => $"{x.LastName} {x.FirstNameInitials}").JoinAnd(", ", " og ")
    };

    var categoryDescriptionViewModel = new CategoryDescriptionViewModel()
    {
        CategoryShort = assessment.Category.ToString(),
        CategoryBar = Enum.GetValues<AlienSpeciesAssessment2023Category>().Select(x => new CategoryBarListElement()
        {
            Name = x.DisplayName(),
            NameShort = x.ToString()
        }).Reverse().ToArray(),
        MethodUrl = "https://artsdatabanken.no/pages/239659"
    };

    var ingressViewModel = new IngressViewModel()
    {
        AlienSpeciesCategory = assessment.AlienSpeciesCategory,
        Category = assessment.Category,
        Environment = assessment.Environment,
        EvaluationContext = assessment.EvaluationContext,
        ListName = Constants.AlienSpecies2023PageMenuHeaderText,
        ParentAssessmentId = assessment.ParentAssessmentId,
        SpeciesStatus = assessment.SpeciesStatus,
        Status = assessment.EstablishmentCategory + assessment.AlienSpeciesCategory,
        TaxonRank = assessment.ScientificName.ScientificNameRank
    };

    var isNr = assessment.Category == Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciesAssessment2023Category.NR;
    var has2018Assessmnet = assessment.PreviousAssessments?.Any(x => x.RevisionYear == 2018) ?? false;
    var category2018 = has2018Assessmnet ? assessment.PreviousAssessments?.Where(x => x.RevisionYear == 2018).Select(x => x.Category).FirstOrDefault() : null;
    var sameAs2018 = assessment.Category == category2018;
    var isEvaluatedAtAnotherLevel = assessment.AlienSpeciesCategory == Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciecAssessment2023AlienSpeciesCategory.TaxonEvaluatedAtAnotherLevel;
    var isMisidentified = assessment.AlienSpeciesCategory == Assessments.Mapping.AlienSpecies.Model.Enums.AlienSpeciecAssessment2023AlienSpeciesCategory.MisIdentified;

    var showExpertStatement = !isNr && !isEvaluatedAtAnotherLevel;
    var showAssessmentReasoning = isNr || isEvaluatedAtAnotherLevel;
    var showRiskCategoryExplanation = !isNr && !isEvaluatedAtAnotherLevel;
    var showCategoryChange = !((isNr && (sameAs2018 || !has2018Assessmnet)) || isEvaluatedAtAnotherLevel || isMisidentified);
    var showClimateEffectsInvationpotential = !isNr && !isEvaluatedAtAnotherLevel;
    var showGeographicVariationInCategory = !isNr && !isEvaluatedAtAnotherLevel;
    var showRegionalSpread = !isNr && !isEvaluatedAtAnotherLevel;
    var showAttachments = !isEvaluatedAtAnotherLevel && assessment.Attachments != null && assessment.Attachments.Count() != 0;
    var showImpactedNatureTypes = !isNr && !isEvaluatedAtAnotherLevel;
    var showReference = assessment.References != null && assessment.References.Count() > 0;
    var showSpreadWays = !isNr && !isEvaluatedAtAnotherLevel;
    var showCitationForAssessment = enableCitation && !string.IsNullOrEmpty(Model.ExpertGroupMembers.Select(x => $"{x.LastName} {x.FirstNameInitials}").JoinAnd(", ", " og "));
    var showFeedback = true;

    var tableOfContentsViewModel = new TableOfContentsViewModel
    {
        Contents = new()
        {
            new ()
            {
                ElementId = nameof(Constants.HeadingsNo.ExpertSummary),
                Title = Constants.HeadingsNo.ExpertSummary,
                ShouldShow = showExpertStatement
            },
            new ()
            {
                ElementId = nameof(Constants.HeadingsNo.AssesmentReasoning),
                Title = Constants.HeadingsNo.AssesmentReasoning,
                ShouldShow = showAssessmentReasoning
            },
            new ()
            {
                ElementId = nameof(Constants.HeadingsNo.RiskCategoryExplanation),
                Title = Constants.HeadingsNo.RiskCategoryExplanation,
                ShouldShow = showRiskCategoryExplanation
            },
            new ()
            {
                ElementId = nameof(Constants.HeadingsNo.CategoryChange),
                Title = Constants.HeadingsNo.CategoryChange,
                ShouldShow = showCategoryChange
            },
            new ()
            {
                ElementId = nameof(Constants.HeadingsNo.ClimateEffectsInvationpotential),
                Title = Constants.HeadingsNo.ClimateEffectsInvationpotential,
                ShouldShow = showClimateEffectsInvationpotential
            },
            new ()
            {
                ElementId = nameof(Constants.HeadingsNo.GeographicVariationInCategory),
                Title = Constants.HeadingsNo.GeographicVariationInCategory,
                ShouldShow = showGeographicVariationInCategory
            },
            new ()
            {
                ElementId = nameof(Constants.HeadingsNo.RegionalSpread),
                Title = Constants.HeadingsNo.RegionalSpread,
                ShouldShow = showRegionalSpread
            },
            new ()
            {
                ElementId = nameof(Constants.HeadingsNo.ImpactedNatureTypes),
                Title = Constants.HeadingsNo.ImpactedNatureTypes,
                ShouldShow = showImpactedNatureTypes
            },
            new ()
            {
                ElementId = nameof(Constants.HeadingsNo.SpreadWays),
                Title = Constants.HeadingsNo.SpreadWays,
                ShouldShow = showSpreadWays
            },
            new ()
            {
                ElementId = nameof(Constants.HeadingsNo.Attachments),
                Title = Constants.HeadingsNo.Attachments,
                ShouldShow = showAttachments
            },
            new ()
            {
                ElementId = nameof(Constants.HeadingsNo.References),
                Title = Constants.HeadingsNo.References,
                ShouldShow = showReference
            },
            new ()
            {
                ElementId = nameof(Constants.HeadingsNo.Citation),
                Title = Constants.HeadingsNo.Citation,
                ShouldShow = showCitationForAssessment
            },
            new ()
            {
                ElementId = "Feedback",
                Title = "Tilbakemelding",
                ShouldShow = showFeedback
            }
        }
    };

    TaxonRank.TaxonRankEnum scientificNameRank;
    var taxonRank = "Ukjent";
    if (Enum.TryParse(Model.Assessment.ScientificName.ScientificNameRank.ToString(), out scientificNameRank))
        if (scientificNameRank != 0)
            taxonRank = scientificNameRank.DisplayName();
}

<partial name="/Views/AlienSpecies/2023/AssessmentPartials/_Breadcrumb.cshtml" />

<div class="pagecontainer">
    <partial name="/Views/Shared/_PageMenu.cshtml" model="Model.PageMenuViewModel" />

    <div class="content-placer bigmid">
        <div class="mid-content with_sidebar">
            <partial name="/Views/Shared/_AssessmentPageHeader.cshtml" model="assessmentPageHeaderViewModel" />
            <div class="mobile_padding">
                <partial name="/Views/Shared/_Ingress.cshtml" model="ingressViewModel"/>
                <partial name="/Views/Shared/_CategoryDescription.cshtml" model="categoryDescriptionViewModel"/>
                <div is-visible="!isNr && !isEvaluatedAtAnotherLevel">
                    <partial name="/Views/AlienSpecies/2023/AssessmentPartials/_RiskMatrix.cshtml"/>
                </div>
                <partial name="/Views/AlienSpecies/2023/AssessmentPartials/_Conclusion.cshtml" model="Model.ExpertStatementViewModel"/>
                <partial name="/Views/Shared/_TableOfContents.cshtml" model="tableOfContentsViewModel" />
                <div class="page_section" is-visible="showExpertStatement">
                    <partial name="/Views/AlienSpecies/2023/AssessmentPartials/_ExpertStatement.cshtml" model="Model.ExpertStatementViewModel" />
                </div>
                <div class="page-section" is-visible="showAssessmentReasoning">
                    <partial name="/Views/AlienSpecies/2023/AssessmentPartials/_AssessmentReasoning.cshtml" model="Model.ExpertStatementViewModel" />
                </div>
                <div class="page-section" is-visible="showRiskCategoryExplanation">
                    <partial name="/Views/AlienSpecies/2023/AssessmentPartials/_RiskCategoryExplanation.cshtml" />
                </div>
                <div class="page-section" is-visible="showCategoryChange">
                    <partial name="/Views/AlienSpecies/2023/AssessmentPartials/_CategoryChange.cshtml" />
                </div>
                <div class="page-section" is-visible="showClimateEffectsInvationpotential">
                    <partial name="/Views/AlienSpecies/2023/AssessmentPartials/_ClimateEffectsInvationpotential.cshtml" />
                </div>
                <div class="page-section" is-visible="showGeographicVariationInCategory">
                    <partial name="/Views/AlienSpecies/2023/AssessmentPartials/_GeographicVariationInCategory.cshtml" />
                </div>
                <div class="page-section" is-visible="showRegionalSpread">
                    <partial name="/Views/AlienSpecies/2023/AssessmentPartials/_RegionalSpread.cshtml" model="Model.RegionalSpreadViewModel" />
                </div>
                <div class="page-section" is-visible="showImpactedNatureTypes">
                    <partial name="/Views/AlienSpecies/2023/AssessmentPartials/_ImpactedNatureTypes.cshtml" />
                </div>
                <div class="page-section" is-visible="showSpreadWays">
                    <partial name="/Views/AlienSpecies/2023/AssessmentPartials/_SpreadWays.cshtml" />
                </div>
                <div class="page-section" is-visible="showAttachments">
                    <partial name="/Views/AlienSpecies/2023/AssessmentPartials/_Attachments.cshtml" model="Model.AttachmentViewModel" />
                </div>
                <div class="page-section" is-visible="showReference">
                    <partial name="/Views/Shared/_Reference.cshtml" model="Model.ReferenceViewModel" />
                </div>
                <div class="page-section" is-visible="showCitationForAssessment">
                    <partial name="/Views/Shared/_CitationForAssessment.cshtml" model="citationViewModel" />
                </div>
                <div class="page-section" id="Feedback">
                    <partial name="/Views/Shared/_Feedback.cshtml" model="new FeedbackFormViewModel { Year = 2023, AssessmentId = assessment.Id, ExpertGroup = assessment.ExpertGroup, Type = FeedbackType.AlienSpecies, HasBackToTopLink = true }" />
                </div>
            </div>
        </div>
        <div class="side mobile_padding">
            <partial name="/Views/Shared/_SidebarContent.cshtml" model="Model.SideBarContentViewModel" />
        </div>
    </div>
</div>

