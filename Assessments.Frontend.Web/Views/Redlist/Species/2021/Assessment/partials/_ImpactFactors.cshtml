@model SpeciesAssessment2021

@functions{

    // Reference for impact factors
    // https://github.com/Artsdatabanken/RodlisteNaturtyper2018visning/blob/2019update/Views/Home/Partials/impact-factors.cshtml

    string ImpactIcon(string id, string subtitle)
    {
        var number = id.Substring(0, 1);
        var biggernumber = id.Substring(0, 3);

        // 0. ingen trussel / no factor  has no image, as it is never displayed.
        if (number == "1")
        {
            // habitat icons are divided further
            number = biggernumber;
        }

        return "https://design.artsdatabanken.no/impact-icons/" + number + ".png";
    }

    string activeOrNot(string element)
    {
        @foreach (var factor in Model.ImpactFactors)
        {
            @if (factor.Id == element)
            {
                return "active final";
            }
            else if (factor.Id.StartsWith(element))
            {
                return "active";
            }
        }

        return "inactive";
    }

    void iconChooser(string compare)
    {
        @if (@compare == "active" || @compare == "active final")
        {
            
            <span class="impact_v">
                <span class="material-icons">
                    done
                </span>
            </span>
        }

    }

    void toggleChooser(Dictionary<string, object> value)
    {
        @if (value.ContainsKey("subelement"))
        {
            <span class="close_icon material-icons text_icon">arrow_drop_down</span>
            <span class="open_icon material-icons text_icon">arrow_right</span>
        }
        else
        {
            <span class="material-icons circle text_icon">
                circle
            </span>
        }
    }

    string isClickableClass(Dictionary<string, object> value)
    {
        @if (value.ContainsKey("subelement"))
        {
            return "clickable";
        }
        return "";
    }

    void listHeaders(string key, Dictionary<string, object> value, string addborder)
    {
        string has_table = "";
        foreach (var factor in Model.ImpactFactors)
        {
            @if (factor.Id == (key))
            {
                has_table = "has_table";
            }
        }
        <span class="text_container @has_table" onclick="expandImpact(this, 'opened_element')">

            <span class="text_collection">
                <span class="title_field  @isClickableClass(value)">
                    @{ toggleChooser(value);}
                    <span class="text_text">
                        @value["title"]
                        @{iconChooser(activeOrNot(key));}
                    </span>
                </span>


                @foreach (var factor in Model.ImpactFactors)
                {
                    @if (factor.Id == (key))
                    {
                        <div class="impact_table">
                            <div class="@addborder">
                                <b>Omfang</b><br />
                                <span>@factor.PopulationScope</span>
                            </div>
                            <div class="@addborder">
                                <b>Alvorlighetsgrad</b><br />
                                <span>@factor.Severity</span><br />
                            </div>
                            <div class="@addborder">
                                <b>Tidsrom</b><br />
                                @factor.TimeScope
                            </div>
                        </div>
                    }
                }

            </span>
        </span>
    }

}

@{
    Dictionary<string, Dictionary<string, object>> impactfactors_json = ViewBag.impactfactors.ToObject<Dictionary<string, Dictionary<string, object>>>();

}


@{ if (!Model.Category.Contains("LC") && 
        !Model.Category.Contains("NA") && 
        !Model.Category.Contains("NE") && 
        !Model.Category.Contains("RE"))
    {
        <div class="page_section impact" id="impactfactors">
            <h2>Påvirkningsfaktorer </h2>
            <p>
                Nedenfor listes det opp forskjellige påvirkningsfaktorer som kan gi utslag for rødlisting av arten.
            </p>

            <button id="summary" class="changetab active" onclick="impactlist('summary',this)">Oppsummering</button>
            <button id="full_list" class="changetab" onclick="impactlist('full_list',this)">Full liste</button>
            <br />
            <ul class="outer tabbed_element_container">
                <li class="tablist_listheader">
                    <span class="summary_title">Artens påvirkningsfaktorer</span>
                    <span class="full_list_title">Alle påvirkningsfaktorer</span>
                    <span class="no_elements">Ingen elementer valgt</span>
                </li>
                @foreach (var (key, value) in impactfactors_json)
                {                
                <li class="@activeOrNot(key)">
                    @{listHeaders(key, value, "addborder");}
                    @if (value.ContainsKey("subelement"))
                    {
                        var first_layer = Newtonsoft.Json.Linq.JObject.Parse(value["subelement"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                        <ul class="second @activeOrNot(key)">
                            @foreach (var (first_k, first_v) in first_layer)
                            {
                                <li class="@activeOrNot(first_k)">
                                    @{listHeaders(first_k, first_v, null);}

                                    @if (first_v.ContainsKey("subelement"))
                                    {
                                        <ul class="third">
                                            @{
                                                var second_layer = Newtonsoft.Json.Linq.JObject.Parse(first_v["subelement"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                                            }
                                            @foreach (var (second_k, second_v) in second_layer)
                                            {
                                                <li class="@activeOrNot(second_k)">
                                                    @{listHeaders(second_k, second_v, null);}

                                                    @if (second_v.ContainsKey("subelement"))
                                                    {
                                                        <ul class="fourth">
                                                            @{
                                                                var third_layer = Newtonsoft.Json.Linq.JObject.Parse(second_v["subelement"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                                                            }
                                                            @foreach (var (third_k, third_v) in third_layer)
                                                            {
                                                                <li class="@activeOrNot(third_k)">
                                                                    @{listHeaders(third_k, third_v, null);}
                                                                    @if (third_v.ContainsKey("subelement"))
                                                                    {
                                                                        <ul class="fifth">
                                                                            @{
                                                                                var fourth_layer = Newtonsoft.Json.Linq.JObject.Parse(third_v["subelement"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                                                                            }
                                                                            @foreach (var (fourth_k, fourth_v) in fourth_layer)
                                                                            {
                                                                                <li class="@activeOrNot(fourth_k)">
                                                                                    @{listHeaders(fourth_k, fourth_v, null);}
                                                                                </li>
                                                                            }
                                                                        </ul>
                                                                    }
                                                                </li>
                                                            }
                                                        </ul>
                                                    }
                                                </li>
                                            }
                                        </ul>
                                    }
                                </li>
                            }
                        </ul>
                    }

                </li>
                }



            </ul>

        </div>

    }
}