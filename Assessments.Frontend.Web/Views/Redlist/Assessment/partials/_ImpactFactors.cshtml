@model SpeciesAssessment2021
@functions{

    // Snatched and shortened from 2018 nature red list,
    // Not yet ready for use.
    // https://github.com/Artsdatabanken/RodlisteNaturtyper2018visning/blob/2019update/Views/Home/Partials/impact-factors.cshtml

    string ImpactIcon(string id, string subtitle)
    {
        var number = id.Substring(0, 1);
        var biggernumber = id.Substring(0, 3);

        // 0. ingen trussel / no factor  has no image, as it is never displayed.
        if (number == "1")
        {
            // habitat icons are divided further
            number = biggernumber;
        }

        return "https://design.artsdatabanken.no/impact-icons/" + number + ".png";
    }

    string activeOrNot(string element)
    {
        @foreach (var factor in Model.ImpactFactors)
        {
            @if (factor.Id == element)
            {
                return "active final";
            }
            else if (factor.Id.StartsWith(element))
            {
                return "active";
            }
        }

        return "inactive";
    }

    void iconChooser(string compare)
    {
        @if (@compare == "active" || @compare == "active final")
        {
            <span class="material-icons" style="color:darkgreen">
                done
            </span>
        }
        else if (@compare == "maybe")
        {
            <span class="material-icons">
                pause
            </span>
        }
        else
        {
            <span class="material-icons" style="color:darkred">
                close
            </span>
        }
    }

    void listHeaders(string key, Dictionary<string, object> value)
    {
        <span class="text_container">
            @{iconChooser(activeOrNot(key));}
            <span class="text_collection">
                <span class="impact-id">@key</span>
                @value["title"]
                @foreach (var factor in Model.ImpactFactors)
                {
                    @if (factor.Id == (key))
                    {
                        <div class="impact_table">
                            <div>
                                <b>Omfang</b>
                                <span>@factor.PopulationScope</span>
                            </div>
                            <div class="sideborders">
                                <b>Alvorlighetsgrad</b>
                                <span>@factor.Severity</span><br />
                            </div>
                            <div>
                                <b>Tidspunkt</b>
                                @factor.TimeScope
                            </div>
                        </div>
                    }
                }

            </span>


        </span>
    }



}

@{
    Dictionary<string, Dictionary<string, object>> impactfactors_json = ViewBag.impactfactors.ToObject<Dictionary<string, Dictionary<string, object>>>();

}

<div class="page_section impact" id="impactfactors">
    <h2>Påvirkningsfaktorer </h2>
    <p>
        Nedenfor listes det opp forskjellige påvirkningsfaktorer som kan gi utslag for rødlisting av arten.

    </p>

    <button id="summary" class="primary" onclick="impactlist('summary',this)">Oppsumering</button>
    <button id="compact" onclick="impactlist('compact',this)">Kompakt liste</button>
    <button id="full_list" onclick="impactlist('full_list',this)">Full liste</button>
    <br />
    <div class="outer">
        @foreach (var (key, value) in impactfactors_json)
        {

            <h3 class="@activeOrNot(key)">
                @{listHeaders(key, value);}
            </h3>
            @if (value.ContainsKey("subelement"))
            {
                <ul class="second @activeOrNot(key)">
                    @{
                        var first_layer = Newtonsoft.Json.Linq.JObject.Parse(value["subelement"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                    }
                    @foreach (var (first_k, first_v) in first_layer)
                    {
                        <li class="@activeOrNot(first_k)">
                            @{listHeaders(first_k, first_v);}
                            @if (first_v.ContainsKey("subelement"))
                            {
                                <ul class="third">
                                    @{
                                        var second_layer = Newtonsoft.Json.Linq.JObject.Parse(first_v["subelement"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                                    }
                                    @foreach (var (second_k, second_v) in second_layer)
                                    {
                                        <li class="@activeOrNot(second_k)">
                                            @{listHeaders(second_k, second_v);}

                                            @if (second_v.ContainsKey("subelement"))
                                            {
                                                <ul class="fourth">
                                                    @{
                                                        var third_layer = Newtonsoft.Json.Linq.JObject.Parse(second_v["subelement"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                                                    }
                                                    @foreach (var (third_k, third_v) in third_layer)
                                                    {
                                                        <li class="@activeOrNot(third_k)">
                                                            @{listHeaders(third_k, third_v);}
                                                            @if (third_v.ContainsKey("subelement"))
                                                            {
                                                                <ul class="fifth">
                                                                    @{
                                                                        var fourth_layer = Newtonsoft.Json.Linq.JObject.Parse(third_v["subelement"].ToString()).ToObject<Dictionary<string, Dictionary<string, object>>>();
                                                                    }
                                                                    @foreach (var (fourth_k, fourth_v) in fourth_layer)
                                                                    {
                                                                        <li class="@activeOrNot(fourth_k)">
                                                                            @{listHeaders(fourth_k, fourth_v);}
                                                                        </li>
                                                                    }
                                                                </ul>
                                                            }
                                                        </li>
                                                    }
                                                </ul>
                                            }
                                        </li>
                                    }
                                </ul>
                            }
                        </li>
                    }
                </ul>
            }
        }
    </div>

</div>

<script>
    // See more text by altering css of the clicked element's top parent node
    document.getElementById('impactfactors').classList.add("summary");

    function impactlist(which, button) {
        document.getElementById('summary').classList.remove("primary");
        document.getElementById('full_list').classList.remove("primary");
        document.getElementById('compact').classList.remove("primary");

        if (which == 'full_list') {
            document.getElementById('impactfactors').classList.add("full_list");
            document.getElementById('impactfactors').classList.remove("summary");
        }
        if (which == 'compact') {
            document.getElementById('impactfactors').classList.remove("full_list");
            document.getElementById('impactfactors').classList.remove("summary");
        }
        if (which == 'summary') {
            document.getElementById('impactfactors').classList.add("summary");
            document.getElementById('impactfactors').classList.remove("full_list");
        }
               
        button.classList.add("primary");
       
    }
</script>